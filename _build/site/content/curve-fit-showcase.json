{"kind":"Notebook","sha256":"2191cb20ac2f646f2199e4a64808d3d8dcadecaff0e9656e517879704f374bdf","slug":"curve-fit-showcase","location":"/curve_fit_showcase.ipynb","dependencies":[],"frontmatter":{"title":"Showcase","subtitle":"Fitting a Variety of Shapes","date":"2025-01-26","kernelspec":{"name":"python3","display_name":"Python 3","language":"python"},"authors":[{"nameParsed":{"literal":"Atharva Aalok","given":"Atharva","family":"Aalok"},"name":"Atharva Aalok","corresponding":true,"email":"atharvaaalok@gmail.com","affiliations":["Stanford University"],"twitter":"atharvaaalok","github":"atharvaaalok","id":"contributors-myst-generated-uid-0"}],"github":"https://github.com/atharvaaalok/neural_injective_geometry","affiliations":[{"id":"Stanford University","name":"Stanford University"}],"exports":[{"format":"ipynb","filename":"curve_fit_showcase.ipynb","url":"/curve_fit_showcase-e6bdb4f92519654f22c0d9928bb6e6e5.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"# Basic imports\nimport torch\nfrom torch import nn\n\nfrom assets.shapes import square, circle, stanford_bunny\nfrom assets.loss_functions import mse\nfrom assets.utils import automate_training, plot_curves","key":"LEKdt3NUqk"},{"type":"output","id":"m5XDvdP4b9p4LdCrMcLLn","data":[],"key":"lkzatsg8N0"}],"key":"tzZ8LpVLgl"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Showcase","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"IhDLPaf91g"}],"identifier":"showcase","label":"Showcase","html_id":"showcase","implicit":true,"key":"isyJqa77IL"}],"key":"CtguLHftm2"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Heart","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"cUZ0u2hAoG"}],"identifier":"heart","label":"Heart","html_id":"heart","implicit":true,"key":"gp9idEYIpZ"}],"key":"XSeqy9k98z"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"from assets.shapes import heart\nfrom assets.networks import NIG_Net\n\n# Generate target curve points\nnum_pts = 1000\nt = torch.linspace(0, 1, num_pts).reshape(-1, 1)\nX_t = heart(num_pts)\n\nnig_net = NIG_Net(\n    layer_count_inj = 4, smm_num_grps = 6, smm_neurons_per_grp = 6\n)\nautomate_training(\n    model = nig_net, loss_fn = mse, X_train = t, Y_train = X_t,\n    learning_rate = 0.001, epochs = 10000, print_cost_every = 2000\n)\n\nX_p = nig_net(t)\nplot_curves(X_p, X_t)","key":"sd6Hs0s3ne"},{"type":"output","id":"Rxay8D35qGCJsBQF93GHj","data":[{"name":"stdout","output_type":"stream","text":"Epoch: [    1/10000]. Loss:    0.000195\nEpoch: [ 2000/10000]. Loss:    0.000135\nEpoch: [ 4000/10000]. Loss:    0.000096\nEpoch: [ 6000/10000]. Loss:    0.000079\nEpoch: [ 8000/10000]. Loss:    0.000068\nEpoch: [10000/10000]. Loss:    0.000062\n"},{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"4c88e58b93ec05d9dbc3547e5f9bfe07","path":"/4c88e58b93ec05d9dbc3547e5f9bfe07.png"},"text/plain":{"content":"<Figure size 640x480 with 1 Axes>","content_type":"text/plain"}}}],"key":"GdBaN541QY"}],"key":"R9L4V8QGwz"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Puzzle Piece","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"LiXVGwHnn0"}],"identifier":"puzzle-piece","label":"Puzzle Piece","html_id":"puzzle-piece","implicit":true,"key":"AHqX3we5hZ"}],"key":"cbP3BGQtA4"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"from assets.shapes import puzzle_piece\nfrom assets.networks import NIG_Net\n\n# Generate target curve points\nnum_pts = 1000\nt = torch.linspace(0, 1, num_pts).reshape(-1, 1)\nX_t = puzzle_piece(num_pts)\n\nnig_net = NIG_Net(\n    layer_count_inj = 5, smm_num_grps = 15, smm_neurons_per_grp = 15\n)\nautomate_training(\n    model = nig_net, loss_fn = mse, X_train = t, Y_train = X_t,\n    learning_rate = 0.1, epochs = 1000, print_cost_every = 200\n)\n\nX_p = nig_net(t)\nplot_curves(X_p, X_t)","key":"WAuHil8bAD"},{"type":"output","id":"CA5IPTCcoxObrDm3dIzO8","data":[{"name":"stdout","output_type":"stream","text":"Epoch: [    1/10000]. Loss:    0.000886\nEpoch: [ 2000/10000]. Loss:    0.000847\nEpoch: [ 4000/10000]. Loss:    0.000819\nEpoch: [ 6000/10000]. Loss:    0.000797\nEpoch: [ 8000/10000]. Loss:    0.000781\nEpoch: [10000/10000]. Loss:    0.000771\n"},{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"8afca5bc2b227f7156e683fba4a672bb","path":"/8afca5bc2b227f7156e683fba4a672bb.png"},"text/plain":{"content":"<Figure size 640x480 with 1 Axes>","content_type":"text/plain"}}}],"key":"q0eDMk6Cs5"}],"key":"J8LuLSz77v"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Now we try to fit the puzzle piece using a Pre-Auxilliary network augmented NIG_Net.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"k5v6bmuNLU"}],"key":"w1wqwfESEq"}],"key":"IlyZ5VlZqr"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"from assets.shapes import puzzle_piece\nfrom assets.networks import PreAux_NIG_Net\n\n# Generate target curve points\nnum_pts = 1000\nt = torch.linspace(0, 1, num_pts).reshape(-1, 1)\nX_t = puzzle_piece(num_pts)\n\npreaux_nig_net = PreAux_NIG_Net(\n    layer_count_inj = 5, smm_num_grps = 15, smm_neurons_per_grp = 15,\n    layer_count_preaux = 2, hidden_dim_preaux = 25\n)\nautomate_training(\n    model = preaux_nig_net, loss_fn = mse, X_train = t, Y_train = X_t,\n    learning_rate = 0.1, epochs = 10000, print_cost_every = 2000\n)\n\nX_p = preaux_nig_net(t)\nplot_curves(X_p, X_t)","key":"Ckqsfd3NOj"},{"type":"output","id":"fm5sa9An1ZRLr7V_C5hd9","data":[{"name":"stdout","output_type":"stream","text":"Epoch: [    1/10000]. Loss:    0.000139\nEpoch: [ 2000/10000]. Loss:    0.000130\nEpoch: [ 4000/10000]. Loss:    0.000122\nEpoch: [ 6000/10000]. Loss:    0.000116\nEpoch: [ 8000/10000]. Loss:    0.000111\nEpoch: [10000/10000]. Loss:    0.000107\n"},{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"19b91c27de1e338ffcd82fc44aea9e8e","path":"/19b91c27de1e338ffcd82fc44aea9e8e.png"},"text/plain":{"content":"<Figure size 640x480 with 1 Axes>","content_type":"text/plain"}}}],"key":"Go5TwBRFTj"}],"key":"OTJIiBQ4MW"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Hand","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"wgStry7sGl"}],"identifier":"hand","label":"Hand","html_id":"hand","implicit":true,"key":"AxvzVF5y7h"}],"key":"tsGMA6srZX"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"from assets.shapes import hand\nfrom assets.networks import NIG_Net\n\n# Generate target curve points\nnum_pts = 1000\nt = torch.linspace(0, 1, num_pts).reshape(-1, 1)\nX_t = hand(num_pts)\n\nnig_net = NIG_Net(\n    layer_count_inj = 5, smm_num_grps = 15, smm_neurons_per_grp = 15\n)\nautomate_training(\n    model = nig_net, loss_fn = mse, X_train = t, Y_train = X_t,\n    learning_rate = 0.1, epochs = 10000, print_cost_every = 2000\n)\n\nX_p = nig_net(t)\nplot_curves(X_p, X_t)","key":"rFzFdzFGPk"},{"type":"output","id":"fz1cYGmZf7_6h9tbt_q-E","data":[{"name":"stdout","output_type":"stream","text":"Epoch: [    1/10000]. Loss:    0.006448\nEpoch: [ 2000/10000]. Loss:    0.006356\nEpoch: [ 4000/10000]. Loss:    0.006282\nEpoch: [ 6000/10000]. Loss:    0.006229\nEpoch: [ 8000/10000]. Loss:    0.006209\nEpoch: [10000/10000]. Loss:    0.006203\n"},{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"dd969d78d2c749047823857e854e77f5","path":"/dd969d78d2c749047823857e854e77f5.png"},"text/plain":{"content":"<Figure size 640x480 with 1 Axes>","content_type":"text/plain"}}}],"key":"CnM0X4SOfV"}],"key":"QtvMizd4tM"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"from assets.shapes import hand\nfrom assets.networks import PreAux_NIG_Net\n\n# Generate target curve points\nnum_pts = 1000\nt = torch.linspace(0, 1, num_pts).reshape(-1, 1)\nX_t = hand(num_pts)\n\npreaux_nig_net = PreAux_NIG_Net(\n    layer_count_inj = 5, smm_num_grps = 15, smm_neurons_per_grp = 15,\n    layer_count_preaux = 2, hidden_dim_preaux = 25\n)\nautomate_training(\n    model = preaux_nig_net, loss_fn = mse, X_train = t, Y_train = X_t,\n    learning_rate = 0.1, epochs = 10000, print_cost_every = 2000\n)\n\nX_p = preaux_nig_net(t)\nplot_curves(X_p, X_t)","key":"cPPujvYonu"},{"type":"output","id":"YmtbmrPDjLI8kwblJADMk","data":[{"name":"stdout","output_type":"stream","text":"Epoch: [    1/10000]. Loss:    5.759819\nEpoch: [ 2000/10000]. Loss:    0.000795\nEpoch: [ 4000/10000]. Loss:    0.000226\nEpoch: [ 6000/10000]. Loss:    0.000147\nEpoch: [ 8000/10000]. Loss:    0.000130\nEpoch: [10000/10000]. Loss:    0.000121\n"},{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"c40805cad7163a8d550ead9c096b9e23","path":"/c40805cad7163a8d550ead9c096b9e23.png"},"text/plain":{"content":"<Figure size 640x480 with 1 Axes>","content_type":"text/plain"}}}],"key":"cS5XNxx81u"}],"key":"BOY0Xox4Qt"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Airplane","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"noPHl3Xcdy"}],"identifier":"airplane","label":"Airplane","html_id":"airplane","implicit":true,"key":"r5bQenvXZu"}],"key":"qC8qun1SYp"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"from assets.shapes import airplane\nfrom assets.networks import NIG_Net\n\n# Generate target curve points\nnum_pts = 1000\nt = torch.linspace(0, 1, num_pts).reshape(-1, 1)\nX_t = airplane(num_pts)\n\nnig_net = NIG_Net(\n    layer_count_inj = 5, smm_num_grps = 10, smm_neurons_per_grp = 10\n)\nautomate_training(\n    model = nig_net, loss_fn = mse, X_train = t, Y_train = X_t,\n    learning_rate = 0.1, epochs = 1000, print_cost_every = 200\n)\n\nX_p = nig_net(t)\nplot_curves(X_p, X_t)","key":"l0MM6udcZ6"},{"type":"output","id":"zhm3AUiVId_zcUySbtVaI","data":[{"name":"stdout","output_type":"stream","text":"Epoch: [   1/1000]. Loss:    1.272580\nEpoch: [ 200/1000]. Loss:    0.343534\nEpoch: [ 400/1000]. Loss:    0.057192\nEpoch: [ 600/1000]. Loss:    0.056915\nEpoch: [ 800/1000]. Loss:    0.055601\nEpoch: [1000/1000]. Loss:    0.054936\n"},{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"d0a9ea3ccb0dcca12feb4cc44da5146c","path":"/d0a9ea3ccb0dcca12feb4cc44da5146c.png"},"text/plain":{"content":"<Figure size 640x480 with 1 Axes>","content_type":"text/plain"}}}],"key":"gvXks1xOFb"}],"key":"qdx5c3GiRW"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"from assets.shapes import airplane\nfrom assets.networks import PreAux_NIG_Net\n\n# Generate target curve points\nnum_pts = 1000\nt = torch.linspace(0, 1, num_pts).reshape(-1, 1)\nX_t = airplane(num_pts)\n\npreaux_nig_net = PreAux_NIG_Net(\n    layer_count_inj = 2, smm_num_grps = 15, smm_neurons_per_grp = 15,\n    layer_count_preaux = 2, hidden_dim_preaux = 50\n)\nautomate_training(\n    model = preaux_nig_net, loss_fn = mse, X_train = t, Y_train = X_t,\n    learning_rate = 0.001, epochs = 10000, print_cost_every = 2000\n)\n\nX_p = preaux_nig_net(t)\nplot_curves(X_p, X_t)","key":"ni5BcKSAuM"},{"type":"output","id":"3Iv2toCIaa5iEfemUBzXd","data":[{"name":"stdout","output_type":"stream","text":"Epoch: [    1/10000]. Loss:    0.000482\nEpoch: [ 2000/10000]. Loss:    0.000471\nEpoch: [ 4000/10000]. Loss:    0.000455\nEpoch: [ 6000/10000]. Loss:    0.000442\nEpoch: [ 8000/10000]. Loss:    0.000430\nEpoch: [10000/10000]. Loss:    0.000424\n"},{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"6f0636f1342d59e9a6dd4dece05ff0b5","path":"/6f0636f1342d59e9a6dd4dece05ff0b5.png"},"text/plain":{"content":"<Figure size 640x480 with 1 Axes>","content_type":"text/plain"}}}],"key":"uUjYPoAOX9"}],"key":"wt5b3jsoj0"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Surprisingly to fit this the NIG Network required is quite small and the PreAux-Net is large.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"AHi6Q3O1Eq"}],"key":"xR4JzConMg"}],"key":"Pg706jLee9"}],"key":"Ezm6mScCWA"},"references":{"cite":{"order":[],"data":{}}}}
{"kind":"Notebook","sha256":"2c01a53b82bfb69c10399d26aa7711a91cd503c99fb5a32e45c17f285f3f6eb6","slug":"curve-fit-showcase","location":"/curve_fit_showcase.ipynb","dependencies":[],"frontmatter":{"title":"Neural Injective Geometry Showcase","subtitle":"Fitting a Variety of Shapes","date":"2025-01-26","kernelspec":{"name":"python3","display_name":"Python 3","language":"python"},"authors":[{"nameParsed":{"literal":"Atharva Aalok","given":"Atharva","family":"Aalok"},"name":"Atharva Aalok","corresponding":true,"email":"atharvaaalok@gmail.com","affiliations":["Stanford University"],"twitter":"atharvaaalok","github":"atharvaaalok","id":"contributors-myst-generated-uid-0"}],"github":"https://github.com/atharvaaalok/neural_injective_geometry","affiliations":[{"id":"Stanford University","name":"Stanford University"}],"exports":[{"format":"ipynb","filename":"curve_fit_showcase.ipynb","url":"/curve_fit_showcase-350a5ed642f247f5e426083474b1d86c.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"# Basic imports\nimport torch\nfrom torch import nn\n\nfrom assets.shapes import square, circle, stanford_bunny\nfrom assets.loss_functions import mse\nfrom assets.utils import automate_training, plot_curves","key":"HamHwkmQ4O"},{"type":"output","id":"LdGnW7NC5WhA5WnlI7IRV","data":[],"key":"Ww8V9NgPK7"}],"key":"a3aGpimwyf"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Showcase","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Nk4CyzhERe"}],"identifier":"showcase","label":"Showcase","html_id":"showcase","implicit":true,"key":"EEtarkERIB"}],"key":"vnR1DSKk4b"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Heart","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"J0va5fvMtc"}],"identifier":"heart","label":"Heart","html_id":"heart","implicit":true,"key":"qGBJaOcyNJ"}],"key":"lmG1KdrADE"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"from assets.shapes import heart\nfrom assets.networks import NIG_Net\n\n# Generate target curve points\nnum_pts = 1000\nt = torch.linspace(0, 1, num_pts).reshape(-1, 1)\nX_t = heart(num_pts)\n\nnig_net = NIG_Net(\n    layer_count_inj = 2, smm_num_grps = 6, smm_neurons_per_grp = 6\n)\nautomate_training(\n    model = nig_net, loss_fn = mse, X_train = t, Y_train = X_t,\n    learning_rate = 0.1, epochs = 1000, print_cost_every = 200\n)\n\nX_p = nig_net(t)\nplot_curves(X_p, X_t)","key":"quOi61DOur"},{"type":"output","id":"pb_8ZdN7pz-yMLsmH4wxR","data":[{"name":"stdout","output_type":"stream","text":"Epoch: [   1/1000]. Loss:   11.191114\nEpoch: [ 200/1000]. Loss:    0.004076\nEpoch: [ 400/1000]. Loss:    0.003471\nEpoch: [ 600/1000]. Loss:    0.003424\nEpoch: [ 800/1000]. Loss:    0.003337\nEpoch: [1000/1000]. Loss:    0.003294\n"},{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"1c876d540caf4dad52bde595794750eb","path":"/1c876d540caf4dad52bde595794750eb.png"},"text/plain":{"content":"<Figure size 640x480 with 1 Axes>","content_type":"text/plain"}}}],"key":"myYXVMvSxg"}],"key":"zgJVWTU6oO"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Puzzle Piece","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"PQ7AToemFD"}],"identifier":"puzzle-piece","label":"Puzzle Piece","html_id":"puzzle-piece","implicit":true,"key":"qBprOJejr7"}],"key":"PL9EKsbG6i"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"from assets.shapes import puzzle_piece\nfrom assets.networks import NIG_Net\n\n# Generate target curve points\nnum_pts = 1000\nt = torch.linspace(0, 1, num_pts).reshape(-1, 1)\nX_t = puzzle_piece(num_pts)\n\nnig_net = NIG_Net(\n    layer_count_inj = 4, smm_num_grps = 10, smm_neurons_per_grp = 10\n)\nautomate_training(\n    model = nig_net, loss_fn = mse, X_train = t, Y_train = X_t,\n    learning_rate = 0.1, epochs = 1000, print_cost_every = 200\n)\n\nX_p = nig_net(t)\nplot_curves(X_p, X_t)","key":"U6K7HxmB9V"},{"type":"output","id":"YofX1hAOI1VQ0E09Amv8Q","data":[{"name":"stdout","output_type":"stream","text":"Epoch: [   1/1000]. Loss:   13.171125\nEpoch: [ 200/1000]. Loss:    0.314101\nEpoch: [ 400/1000]. Loss:    0.018508\nEpoch: [ 600/1000]. Loss:    0.016961\nEpoch: [ 800/1000]. Loss:    0.016415\nEpoch: [1000/1000]. Loss:    0.015290\n"},{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"96a57b6b8ef7219f1a5cbccc6aa87987","path":"/96a57b6b8ef7219f1a5cbccc6aa87987.png"},"text/plain":{"content":"<Figure size 640x480 with 1 Axes>","content_type":"text/plain"}}}],"key":"CLbT4kn59P"}],"key":"pHnQ7zoGGV"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Hand","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"yHZthQVAKg"}],"identifier":"hand","label":"Hand","html_id":"hand","implicit":true,"key":"OHXp6UN1eW"}],"key":"LisUgE9HYh"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"from assets.shapes import hand\nfrom assets.networks import NIG_Net\n\n# Generate target curve points\nnum_pts = 1000\nt = torch.linspace(0, 1, num_pts).reshape(-1, 1)\nX_t = hand(num_pts)\n\nnig_net = NIG_Net(\n    layer_count_inj = 2, smm_num_grps = 6, smm_neurons_per_grp = 6\n)\nautomate_training(\n    model = nig_net, loss_fn = mse, X_train = t, Y_train = X_t,\n    learning_rate = 0.1, epochs = 1000, print_cost_every = 200\n)\n\nX_p = nig_net(t)\nplot_curves(X_p, X_t)","key":"vpy8mZnz10"},{"type":"output","id":"lv4Z2MQauPES8Sd6uW5j-","data":[{"name":"stdout","output_type":"stream","text":"Epoch: [   1/1000]. Loss:   29.576889\nEpoch: [ 200/1000]. Loss:    0.096282\nEpoch: [ 400/1000]. Loss:    0.040907\nEpoch: [ 600/1000]. Loss:    0.039499\nEpoch: [ 800/1000]. Loss:    0.040415\nEpoch: [1000/1000]. Loss:    0.039052\n"},{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"dd2b39033693dd13fb8c0dd293c7de0e","path":"/dd2b39033693dd13fb8c0dd293c7de0e.png"},"text/plain":{"content":"<Figure size 640x480 with 1 Axes>","content_type":"text/plain"}}}],"key":"f9lBiRGkyl"}],"key":"sHzFq4ulJd"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Airplane","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"fpZiEX0ddZ"}],"identifier":"airplane","label":"Airplane","html_id":"airplane","implicit":true,"key":"JimVaISkle"}],"key":"ta38IGzu2a"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"from assets.shapes import airplane\nfrom assets.networks import NIG_Net\n\n# Generate target curve points\nnum_pts = 1000\nt = torch.linspace(0, 1, num_pts).reshape(-1, 1)\nX_t = airplane(num_pts)\n\nnig_net = NIG_Net(\n    layer_count_inj = 3, smm_num_grps = 6, smm_neurons_per_grp = 6\n)\nautomate_training(\n    model = nig_net, loss_fn = mse, X_train = t, Y_train = X_t,\n    learning_rate = 0.1, epochs = 1000, print_cost_every = 200\n)\n\nX_p = nig_net(t)\nplot_curves(X_p, X_t)","key":"Sxx5Wwe51J"},{"type":"output","id":"LEg0Q_klsb-g1iY7E-GBH","data":[{"name":"stdout","output_type":"stream","text":"Epoch: [   1/1000]. Loss:    8.281063\nEpoch: [ 200/1000]. Loss:    0.060592\nEpoch: [ 400/1000]. Loss:    0.096061\nEpoch: [ 600/1000]. Loss:    0.055735\nEpoch: [ 800/1000]. Loss:    0.050846\nEpoch: [1000/1000]. Loss:    0.027927\n"},{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"ccef618d873dc4fb4e07ab18f60ddbf8","path":"/ccef618d873dc4fb4e07ab18f60ddbf8.png"},"text/plain":{"content":"<Figure size 640x480 with 1 Axes>","content_type":"text/plain"}}}],"key":"JsjT3T8CD4"}],"key":"qlcY8gtNv6"}],"key":"hheQEUCDJO"},"references":{"cite":{"order":[],"data":{}}}}
{"kind":"Notebook","sha256":"ebb0c01dd81331da3a4aadcab3d50ebbfc57ac9c3ed885b539e254319ecc5f40","slug":"monotonic-networks","location":"/monotonic_networks.ipynb","dependencies":[],"frontmatter":{"title":"Monotonic Networks","subtitle":"Neural Networks as Activation Functions","date":"2025-01-26","bibliography":["monotonic_networks_references.bib"],"kernelspec":{"name":"python3","display_name":"Python 3","language":"python"},"authors":[{"nameParsed":{"literal":"Atharva Aalok","given":"Atharva","family":"Aalok"},"name":"Atharva Aalok","corresponding":true,"email":"atharvaaalok@gmail.com","affiliations":["Stanford University"],"twitter":"atharvaaalok","github":"atharvaaalok","id":"contributors-myst-generated-uid-0"}],"github":"https://github.com/atharvaaalok/neural_injective_geometry","affiliations":[{"id":"Stanford University","name":"Stanford University"}],"thumbnail":"/neural_injective_geo-9c29481b400f3767e9eeaa5d501b8c32.svg","exports":[{"format":"ipynb","filename":"monotonic_networks.ipynb","url":"/monotonic_networks-ba4a4f11101c11edd140d590a7711a9a.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"# Basic imports\nimport torch\nfrom torch import nn\n\nfrom assets.shapes import square, circle, stanford_bunny\nfrom assets.loss_functions import mse\nfrom assets.utils import automate_training, plot_curves","key":"WASt5TyhlN"},{"type":"output","id":"iwE-Wmgs9WnlGP6RPVscX","data":[],"key":"bifPTYblhS"}],"key":"qfDbUoOi2Y"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Creating Injective Functions with Parameters","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"GQu1tWgOOp"}],"identifier":"creating-injective-functions-with-parameters","label":"Creating Injective Functions with Parameters","html_id":"creating-injective-functions-with-parameters","implicit":true,"key":"A6swcBZFjA"}],"key":"Ltf1yVQ9Xd"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"We observed earlier that with the ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"u7O4ksPZeS"},{"type":"crossReference","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"inlineCode","value":"PReLU","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"zB7j67DMx7"}],"identifier":"parameter_insight","label":"parameter_insight","kind":"paragraph","template":"Paragraph","resolved":true,"html_id":"parameter-insight","remote":true,"url":"/the-idea-injective-net","dataUrl":"/the-idea-injective-net.json","key":"upBHRAagqR"},{"type":"text","value":" activation Injective Networks\nperform much better. Therefore, the insight we gain that will help us power up Injective Networks is\n: ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"BmZ3SqiOYQ"},{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"add more parameters","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"x0E8sjXoUx"}],"key":"KtEzcJ3F88"},{"type":"text","value":".","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"D4hr5V6UR2"}],"key":"lVpCjATopI"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"One way to add parameters to the Network is to use parameterized activation functions e.g.\n","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"UXp1xpivaX"},{"type":"inlineMath","value":"\\sigma(\\beta x)","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>σ</mi><mo stretchy=\"false\">(</mo><mi>β</mi><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\sigma(\\beta x)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05278em;\">β</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span></span></span></span>","key":"BYXGhl8UUS"},{"type":"text","value":" i.e. the sigmoid with a parameter ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"J7cwqMqbyH"},{"type":"text","value":"β","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"IHOZ3Tq9o4"},{"type":"text","value":" or try and create other activations.\nDuring the creation of these parameterized activations one needs to keep in mind that injectivity\nshould not be violated for any parameter value to ensure that the network always represents only\nsimple closed curves, which is our final goal.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"GIVW3pwkbS"}],"key":"VVNbzumMmC"},{"type":"paragraph","position":{"start":{"line":11,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"text","value":"It is quite difficult to combine activation functions together with appropriate parameters that add\nrepresentation power while maintaining injectivity. We will therefore look at a much more drastic\nand interesting approach.","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"DD4NePZMCW"}],"key":"hiqriiS4rm"}],"key":"VPg6z9KeXg"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"First, we need to understand how we could create a function that is injective. The first step is to\nrealize that:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"I6rX100evJ"}],"key":"WtCEQLjTjp"},{"type":"blockquote","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"A continuous function is injective if and only if it is strictly monotonic.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Xv4EuH3IZU"},{"type":"footnoteReference","identifier":"injective_monotonic","label":"injective_monotonic","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"number":1,"enumerator":"1","key":"eznKwDP18D"}],"key":"qIeZcvjNnt"}],"key":"I8bbI45E7p"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Therefore we can create injective functions by creating strictly monotonic functions.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"z8NbcabovU"}],"key":"d5wfFUkLM1"},{"type":"footnoteDefinition","identifier":"injective_monotonic","label":"injective_monotonic","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Math StackExchange,\n","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"iNyAThiJs7"},{"type":"link","url":"https://math.stackexchange.com/questions/752073/continuous-injective-map-is-strictly-monotonic","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Continuous injective map is strictly monotonic","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"mE7n9Njypz"}],"urlSource":"https://math.stackexchange.com/questions/752073/continuous-injective-map-is-strictly-monotonic","key":"gB9d9c4VZc"}],"key":"Pqgag2Q1lm"}],"number":1,"enumerator":"1","key":"LKXRtfSCJc"}],"key":"ziZZNajfWC"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Monotonic Networks: A Superpower","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ug6KP9nFth"}],"identifier":"monotonic-networks-a-superpower","label":"Monotonic Networks: A Superpower","html_id":"monotonic-networks-a-superpower","implicit":true,"key":"EGzzmP6qCB"}],"key":"kFizC3SlkV"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"We will create injective activation functions using a drastic measure. Every activation function\nwill be an injective neural network!","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"EDiZzr7FXc"}],"key":"dYtnQdfVvt"},{"type":"paragraph","position":{"start":{"line":4,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"text","value":"We will create neural networks that take in a scalar input and output a scalar value and are\nstrictly monotonic in the input. Mathematically our activation function now is a neural network ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"suUVtUEcrP"},{"type":"inlineMath","value":"M","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">M</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span></span>","key":"q4gyqsRVn0"},{"type":"text","value":"","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"Greqz3tDdm"}],"key":"cr9KQKcJhj"},{"type":"math","value":"\nM: \\mathbb{R} \\rightarrow \\mathbb{R}","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"tight":true,"html":"<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>M</mi><mo>:</mo><mi mathvariant=\"double-struck\">R</mi><mo>→</mo><mi mathvariant=\"double-struck\">R</mi></mrow><annotation encoding=\"application/x-tex\">\nM: \\mathbb{R} \\rightarrow \\mathbb{R}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">R</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">R</span></span></span></span></span>","enumerator":"1","key":"XiIUu18n8a"},{"type":"paragraph","position":{"start":{"line":4,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"text","value":"which satisfies one of:","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"k4vYEMkW1E"}],"key":"mRCQ25dpTg"},{"type":"math","value":"\nM(x_1) < M(x_2) \\quad \\forall x_1, x_2 \\in \\mathbb{R} \\quad s.t. \\; x_1 < x_2\\\\\nM(x_1) > M(x_2) \\quad \\forall x_1, x_2 \\in \\mathbb{R} \\quad s.t. \\; x_1 > x_2","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"tight":"before","html":"<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>M</mi><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo stretchy=\"false\">)</mo><mo>&lt;</mo><mi>M</mi><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mn>2</mn></msub><mo stretchy=\"false\">)</mo><mspace width=\"1em\"/><mi mathvariant=\"normal\">∀</mi><msub><mi>x</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>x</mi><mn>2</mn></msub><mo>∈</mo><mi mathvariant=\"double-struck\">R</mi><mspace width=\"1em\"/><mi>s</mi><mi mathvariant=\"normal\">.</mi><mi>t</mi><mi mathvariant=\"normal\">.</mi><mtext>  </mtext><msub><mi>x</mi><mn>1</mn></msub><mo>&lt;</mo><msub><mi>x</mi><mn>2</mn></msub><mspace linebreak=\"newline\"></mspace><mi>M</mi><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo stretchy=\"false\">)</mo><mo>&gt;</mo><mi>M</mi><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mn>2</mn></msub><mo stretchy=\"false\">)</mo><mspace width=\"1em\"/><mi mathvariant=\"normal\">∀</mi><msub><mi>x</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>x</mi><mn>2</mn></msub><mo>∈</mo><mi mathvariant=\"double-struck\">R</mi><mspace width=\"1em\"/><mi>s</mi><mi mathvariant=\"normal\">.</mi><mi>t</mi><mi mathvariant=\"normal\">.</mi><mtext>  </mtext><msub><mi>x</mi><mn>1</mn></msub><mo>&gt;</mo><msub><mi>x</mi><mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">\nM(x_1) &lt; M(x_2) \\quad \\forall x_1, x_2 \\in \\mathbb{R} \\quad s.t. \\; x_1 &lt; x_2\\\\\nM(x_1) &gt; M(x_2) \\quad \\forall x_1, x_2 \\in \\mathbb{R} \\quad s.t. \\; x_1 &gt; x_2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord\">∀</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8389em;vertical-align:-0.15em;\"></span><span class=\"mord mathbb\">R</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord\">.</span><span class=\"mord mathnormal\">t</span><span class=\"mord\">.</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord\">∀</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8389em;vertical-align:-0.15em;\"></span><span class=\"mord mathbb\">R</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord\">.</span><span class=\"mord mathnormal\">t</span><span class=\"mord\">.</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></span>","enumerator":"2","key":"MDRjJJ7yUL"},{"type":"card","children":[{"type":"header","children":[{"type":"paragraph","children":[{"type":"text","value":"Monotonic Networks","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"XcJQxJMhhl"}],"key":"hz5aY4RXLl"}],"key":"gAOfhOtBfg"},{"type":"paragraph","position":{"start":{"line":18,"column":1},"end":{"line":19,"column":1}},"children":[{"type":"text","value":"We will choose neural networks that ","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"key":"C044sk5sij"},{"type":"emphasis","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"text","value":"by design","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"key":"PCv4m7ty2v"}],"key":"Vs2PVO6NjH"},{"type":"text","value":" for ","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"key":"UNWn4kjr7M"},{"type":"emphasis","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"text","value":"any","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"key":"ZhYTZ3AZcm"}],"key":"DwumyjjqPu"},{"type":"text","value":" parameter value are always monotonic,\nthese are called ","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"key":"BAmnqJfZPD"},{"type":"strong","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"emphasis","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"text","value":"Monotonic Networks","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"key":"eDcw2pzLUP"}],"key":"MaN5vABVNL"}],"key":"wVpbK03559"},{"type":"text","value":".","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"key":"B7OvfshZab"}],"key":"dpEzWjZbqk"},{"type":"footer","children":[{"type":"paragraph","children":[{"type":"citeGroup","kind":"parenthetical","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"children":[{"type":"cite","identifier":"sill1997monotonic","label":"sill1997monotonic","kind":"parenthetical","position":{"start":{"line":17,"column":2},"end":{"line":17,"column":20}},"children":[{"type":"text","value":"Sill, 1997","key":"LZgfDpZvlM"}],"enumerator":"1","key":"JEO5dlRRNK"},{"type":"cite","identifier":"igel2023smooth","label":"igel2023smooth","kind":"parenthetical","position":{"start":{"line":17,"column":21},"end":{"line":17,"column":37}},"children":[{"type":"text","value":"Igel, 2023","key":"WcAJ8GwUbN"}],"enumerator":"2","key":"LwIHSZxyLH"},{"type":"cite","identifier":"wehenkel2019unconstrained","label":"wehenkel2019unconstrained","kind":"parenthetical","position":{"start":{"line":17,"column":38},"end":{"line":17,"column":65}},"children":[{"type":"text","value":"Wehenkel & Louppe, 2019","key":"fI6HL4tipU"}],"enumerator":"3","key":"jupwm5HCi3"},{"type":"cite","identifier":"kitouni2023expressive","label":"kitouni2023expressive","kind":"parenthetical","position":{"start":{"line":17,"column":66},"end":{"line":17,"column":89}},"children":[{"type":"text","value":"Kitouni ","key":"rRqGCevzgQ"},{"type":"emphasis","children":[{"type":"text","value":"et al.","key":"FHQVNE5U8h"}],"key":"VpbXbPbH0y"},{"type":"text","value":", 2023","key":"RyidvFuEep"}],"enumerator":"4","key":"tY1KPz2lFs"},{"type":"cite","identifier":"runje2023constrained","label":"runje2023constrained","kind":"parenthetical","position":{"start":{"line":17,"column":90},"end":{"line":17,"column":112}},"children":[{"type":"text","value":"Runje & Shankaranarayana, 2023","key":"IDwXqaMyb0"}],"enumerator":"5","key":"fwWOyDLW9F"}],"key":"zELfg6Cgha"}],"key":"C5LNdiyuLV"}],"key":"uswVJTmans"}],"key":"fvha6R6tQb"},{"type":"paragraph","position":{"start":{"line":22,"column":1},"end":{"line":23,"column":1}},"children":[{"type":"text","value":"Every activation layer will be an independent Monotonic Network and all neurons will use the same\nneural network. This is shown in ","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"PVSwsgKMnB"},{"type":"crossReference","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"children":[{"type":"text","value":"Figure ","key":"Q2cTfVUAi7"},{"type":"text","value":"1","key":"YIiLqvrJaw"}],"identifier":"neural_injective_geometry_net","label":"neural_injective_geometry_net","kind":"figure","template":"Figure %s","enumerator":"1","resolved":true,"html_id":"neural-injective-geometry-net","key":"Er1j6SHDqF"},{"type":"text","value":".","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"kNSBklXbCa"}],"key":"iXbMGZ0I3L"},{"type":"container","kind":"figure","children":[{"type":"image","url":"/neural_injective_geo-9c29481b400f3767e9eeaa5d501b8c32.svg","alt":"Injective Networks with Monotonic Networks as activation functions","height":"210px","urlSource":"assets/neural_injective_geometry_net.svg","key":"G1QPt10EjD"},{"type":"caption","children":[{"type":"paragraph","position":{"start":{"line":28,"column":1},"end":{"line":29,"column":1}},"children":[{"type":"captionNumber","kind":"figure","label":"neural_injective_geometry_net","identifier":"neural_injective_geometry_net","html_id":"neural-injective-geometry-net","enumerator":"1","children":[{"type":"text","value":"Figure ","key":"kUtaCzlrXt"},{"type":"text","value":"1","key":"kTPT9iAoGd"},{"type":"text","value":":","key":"E2qShWZS4F"}],"template":"Figure %s:","key":"xNpTVaqjP0"},{"type":"text","value":"Injective Network with Monotonic Networks as activation functions. ","position":{"start":{"line":28,"column":1},"end":{"line":28,"column":1}},"key":"YaXRAxd02q"},{"type":"inlineMath","value":"M_1","position":{"start":{"line":28,"column":1},"end":{"line":28,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>M</mi><mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">M_1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>","key":"TtIpwH3BWA"},{"type":"text","value":" shown in the figure is a\nmonotonic network.","position":{"start":{"line":28,"column":1},"end":{"line":28,"column":1}},"key":"CWT8B7bDTn"}],"key":"uDY8c0aWcp"}],"key":"yxarHsLzLF"}],"label":"neural_injective_geometry_net","identifier":"neural_injective_geometry_net","enumerator":"1","html_id":"neural-injective-geometry-net","key":"tk819fzCRr"}],"key":"OWh4NEa8Is"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Building Monotonic Networks with Smooth Min-Max Networks","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"n47ayLx8lx"}],"identifier":"building-monotonic-networks-with-smooth-min-max-networks","label":"Building Monotonic Networks with Smooth Min-Max Networks","html_id":"building-monotonic-networks-with-smooth-min-max-networks","implicit":true,"key":"CZmHICBc1c"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Building Monotonic Networks is an active area of research and there are a few popular choices. The\nfirst Monotonic Network was designed by ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"V1PKpbihMs"},{"type":"cite","identifier":"sill1997monotonic","label":"sill1997monotonic","kind":"narrative","position":{"start":{"line":2,"column":140},"end":{"line":2,"column":158}},"children":[{"type":"text","value":"Sill (1997)","key":"FdPP8l34Yr"}],"enumerator":"1","key":"gSGMRoIfuz"},{"type":"text","value":" which used ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"bYpFMEwySz"},{"type":"inlineMath","value":"min","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi><mi>i</mi><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">min</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6595em;\"></span><span class=\"mord mathnormal\">min</span></span></span></span>","key":"jo4kCHC8f4"},{"type":"text","value":" and ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"JzBzHA2kC5"},{"type":"inlineMath","value":"max","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi><mi>a</mi><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">max</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">ma</span><span class=\"mord mathnormal\">x</span></span></span></span>","key":"sllyvnpA6j"},{"type":"text","value":" operations to\nimpart monotonicity. But since the ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"tUjOkLn5g1"},{"type":"inlineMath","value":"min-max","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi><mi>i</mi><mi>n</mi><mo>−</mo><mi>m</mi><mi>a</mi><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">min-max</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7429em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">min</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">ma</span><span class=\"mord mathnormal\">x</span></span></span></span>","key":"D0HaIf6GNl"},{"type":"text","value":" operations are not differentiable they are hard\nto train and also suffer from dead neurons","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"qGPmkMOCQC"},{"type":"footnoteReference","identifier":"dead_neurons","label":"dead_neurons","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"number":2,"enumerator":"2","key":"wzoEmcuB6H"},{"type":"text","value":". Recently ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"v5wsFfjfFR"},{"type":"cite","identifier":"igel2023smooth","label":"igel2023smooth","kind":"narrative","position":{"start":{"line":2,"column":361},"end":{"line":2,"column":376}},"children":[{"type":"text","value":"Igel (2023)","key":"Ux75kXlq2C"}],"enumerator":"2","key":"LDDVsfGMzF"},{"type":"text","value":" proposed a\nvariation of the original Monotonic Networks proposed by ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"Kxh9YusRLx"},{"type":"cite","identifier":"sill1997monotonic","label":"sill1997monotonic","kind":"narrative","position":{"start":{"line":2,"column":445},"end":{"line":2,"column":463}},"children":[{"type":"text","value":"Sill (1997)","key":"lOnRXoKDSK"}],"enumerator":"1","key":"y9j0tUbVba"},{"type":"text","value":", which replaces the hard\n","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"eQooxNwSsn"},{"type":"inlineMath","value":"min-max","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi><mi>i</mi><mi>n</mi><mo>−</mo><mi>m</mi><mi>a</mi><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">min-max</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7429em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">min</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">ma</span><span class=\"mord mathnormal\">x</span></span></span></span>","key":"ySY316ZXp9"},{"type":"text","value":" with their smooth variants. These are called Smooth Min-Max Monotonic Networks.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"YfChmQL8AF"}],"key":"wSyIbQu0KY"},{"type":"paragraph","position":{"start":{"line":9,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"We will use Smooth Min-Max Monotonic Networks as activation functions to augment Injective Networks.\nWe use the code provided in Christian’s Repository\n","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"I0aSVyK5qD"},{"type":"link","url":"https://github.com/christian-igel/SMM","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"https://​github​.com​/christian​-igel​/SMM","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"JpVmmqv5XC"}],"urlSource":"https://github.com/christian-igel/SMM","error":true,"key":"WtU6cA76J5"},{"type":"text","value":".","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"adKNeq4few"}],"key":"mxKRZhsgXh"},{"type":"footnoteDefinition","identifier":"dead_neurons","label":"dead_neurons","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":13,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"text","value":"Data Science StackExchange\n","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"Pj2aiKY7CI"},{"type":"link","url":"https://datascience.stackexchange.com/questions/5706/what-is-the-dying-relu-problem-in-neural-networks","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"text","value":"What is the “dying ReLU” problem in neural networks?","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"QiKumDSxAd"}],"urlSource":"https://datascience.stackexchange.com/questions/5706/what-is-the-dying-relu-problem-in-neural-networks","key":"ftureHokRh"}],"key":"nUost3k2Jx"}],"number":2,"enumerator":"2","key":"HCcFB7c77m"}],"key":"zS5EMCj9N8"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"import numpy as np\nfrom assets.SmoothMonotonicNN import SmoothMonotonicNN\n\nclass NIG_Net(nn.Module):\n    def __init__(self, layer_count_inj, smm_num_grps, smm_neurons_per_grp):\n        super().__init__()\n\n        # Transformation from t on the [0, 1] interval to unit circle for closed shapes\n        self.closed_transform = lambda t: torch.hstack([\n            torch.cos(2 * torch.pi * t),\n            torch.sin(2 * torch.pi * t)\n        ])\n\n        self.layer_count_inj = layer_count_inj\n        self.linear_layers = nn.ModuleList()\n        self.monotonic_act = nn.ModuleList()\n\n        for i in range(layer_count_inj):\n            self.linear_layers.append(nn.Linear(2, 2))\n            self.monotonic_act.append(SmoothMonotonicNN(\n                n = 1, K = smm_num_grps, h_K = smm_neurons_per_grp, mask = np.array([1])\n            ))\n        \n    def forward(self, t):\n        x = self.closed_transform(t)\n\n        for linear_layer, monotonic_act in zip(self.linear_layers, self.monotonic_act):\n            # Apply linear transformation\n            x = linear_layer(x)\n            # Apply monotonic layers to each component of x separately\n            x1, x2 = x[:, 0:1], x[:, 1:2]  # Efficient slicing\n            x = torch.stack([monotonic_act(x1), monotonic_act(x2)], dim = -1)\n\n        return x","key":"UH8Om4MhxQ"},{"type":"output","id":"L0eg9nPtVOsttOyuA24C0","data":[],"key":"ybT5wiVJ3D"}],"key":"J1NECSf8ZI"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"# Generate target curve points\nX_t_bunny = stanford_bunny(num_points = 1000)\nnum_pts = X_t_bunny.shape[0]\nt = torch.linspace(0, 1, num_pts).reshape(-1, 1)\n\nbunny_net = NIG_Net(\n    layer_count_inj = 8, smm_num_grps = 8, smm_neurons_per_grp = 8\n)\nautomate_training(\n    model = bunny_net, loss_fn = mse, X_train = t, Y_train = X_t_bunny,\n    learning_rate = 0.001, epochs = 10000, print_cost_every = 2000\n)\n\nX_p_bunny = bunny_net(t)\nplot_curves(X_p_bunny, X_t_bunny)","key":"vgKa3a8D0d"},{"type":"output","id":"K5vAv75NIWWt9a2htG8Zh","data":[{"name":"stdout","output_type":"stream","text":"Epoch: [    1/10000]. Loss:    0.000368\nEpoch: [ 2000/10000]. Loss:    0.000347\nEpoch: [ 4000/10000]. Loss:    0.000321\nEpoch: [ 6000/10000]. Loss:    0.000301\nEpoch: [ 8000/10000]. Loss:    0.000288\nEpoch: [10000/10000]. Loss:    0.000279\n"},{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"fcf5c74a97639785d5dbe231aa055ec9","path":"/fcf5c74a97639785d5dbe231aa055ec9.png"},"text/plain":{"content":"<Figure size 640x480 with 1 Axes>","content_type":"text/plain"}}}],"key":"z3T6tastFX"}],"key":"bijaG6TCXh"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"We observe an amazing improvement! Using Monotonic Networks as activation functions bolsters\nInjective Networks by introducing a lot of parameters which can be tuned to fit shapes with high\naccuracy.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"dmmgEpvr9G"}],"key":"T16Vl7c0Pk"}],"key":"Qscm3PF1QH"}],"key":"Vy2MA1I6Gd"},"references":{"cite":{"order":["sill1997monotonic","igel2023smooth","wehenkel2019unconstrained","kitouni2023expressive","runje2023constrained"],"data":{"sill1997monotonic":{"label":"sill1997monotonic","enumerator":"1","html":"Sill, J. (1997). Monotonic networks. <i>Advances in Neural Information Processing Systems</i>, <i>10</i>."},"igel2023smooth":{"label":"igel2023smooth","enumerator":"2","html":"Igel, C. (2023). Smooth Min-Max Monotonic Networks. <i>arXiv Preprint arXiv:2306.01147</i>."},"wehenkel2019unconstrained":{"label":"wehenkel2019unconstrained","enumerator":"3","html":"Wehenkel, A., & Louppe, G. (2019). Unconstrained monotonic neural networks. <i>Advances in Neural Information Processing Systems</i>, <i>32</i>."},"kitouni2023expressive":{"label":"kitouni2023expressive","enumerator":"4","html":"Kitouni, O., Nolte, N., & Williams, M. (2023). Expressive monotonic neural networks. <i>arXiv Preprint arXiv:2307.07512</i>."},"runje2023constrained":{"label":"runje2023constrained","enumerator":"5","html":"Runje, D., & Shankaranarayana, S. M. (2023). Constrained monotonic neural networks. <i>International Conference on Machine Learning</i>, 29338–29353."}}}}}
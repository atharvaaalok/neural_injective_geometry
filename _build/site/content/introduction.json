{"kind":"Notebook","sha256":"b50c36aa088230eb85ff475da165c2f06ade3b6cbbeac2b511c4d8fae2f6390d","slug":"introduction","location":"/introduction.ipynb","dependencies":[],"frontmatter":{"title":"Motivation for Non-Self-Intersecting Geometry","subtitle":"An Introduction to Simple Closed Curves","date":"2025-01-21","kernelspec":{"name":"python3","display_name":"Python 3","language":"python"},"authors":[{"nameParsed":{"literal":"Atharva Aalok","given":"Atharva","family":"Aalok"},"name":"Atharva Aalok","corresponding":true,"email":"atharvaaalok@gmail.com","affiliations":["Stanford University"],"twitter":"atharvaaalok","github":"atharvaaalok","id":"contributors-myst-generated-uid-0"}],"github":"https://github.com/atharvaaalok/neural_injective_geometry","affiliations":[{"id":"Stanford University","name":"Stanford University"}],"thumbnail":"/boundary_important_i-a2bad0fd8f761db9443696e65d6ce7d0.svg","exports":[{"format":"ipynb","filename":"introduction.ipynb","url":"/introduction-0383cdeac698475751911f8467d12c65.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Introduction","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"QReaxDAU2B"}],"identifier":"introduction","label":"Introduction","html_id":"introduction","implicit":true,"key":"QU1OeO9UlV"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Shape optimization is the study of designing shapes that minimize or maximize some quantity of\ninterest. An example would be designing the wing of an airplane that maximizes the lift-to-drag\nratio. A typical shape optimization process loop consists of three steps:","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"l4MYi2suD7"}],"key":"mthGMZG3f2"},{"type":"grid","columns":[1,1,2,3],"children":[{"type":"card","children":[{"type":"header","children":[{"type":"paragraph","children":[{"type":"text","value":"1. Shape Representation","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"AHftwvMfGA"}],"key":"p3MD1H5Rvg"}],"key":"srmXOhHFKP"},{"type":"paragraph","position":{"start":{"line":9,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"Using a parameterization method to represent the shape. The parameters ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"k4KCU3nWz9"},{"type":"text","value":"ϕ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"JSXlfJK9ny"},{"type":"text","value":" are the design\nvariables. E.g. splines with their control points as parameters.","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"dfq8yDYCfi"}],"key":"SckP0RNGYK"}],"key":"tawet39hED"},{"type":"card","children":[{"type":"header","children":[{"type":"paragraph","children":[{"type":"text","value":"2. Shape Evaluation","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"OSBmpqfWOk"}],"key":"H5EJ86p7L7"}],"key":"fah2qFP5wd"},{"type":"paragraph","position":{"start":{"line":15,"column":1},"end":{"line":16,"column":1}},"children":[{"type":"text","value":"Evaluating some characteristic of the shape that is to be minimized or maximized. E.g. lift-to-drag\nratio of a wing.","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"VHfkzU3o6V"}],"key":"c3laeCtRbA"}],"key":"yDBRKuhh95"},{"type":"card","children":[{"type":"header","children":[{"type":"paragraph","children":[{"type":"text","value":"3. Shape Improvement","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"key":"KpDvqCoNr3"}],"key":"JuAXbqtVS9"}],"key":"HZmxgd08JD"},{"type":"paragraph","position":{"start":{"line":21,"column":1},"end":{"line":22,"column":1}},"children":[{"type":"text","value":"Changing the parameters ","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"key":"zBf5qIDacz"},{"type":"text","value":"ϕ","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"key":"rYbQSGgPg7"},{"type":"text","value":" to design shapes that achieve better characteristics. E.g. gradient\ndescent to optimize ","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"key":"ErcakKXM6F"},{"type":"text","value":"ϕ","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"key":"d0jAxT9sAv"},{"type":"text","value":".","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"key":"W165ur9sed"}],"key":"hp98HLsZH6"}],"key":"SKZepI5wFU"}],"key":"L7kEdMZe27"},{"type":"paragraph","position":{"start":{"line":26,"column":1},"end":{"line":26,"column":1}},"children":[{"type":"strong","position":{"start":{"line":26,"column":1},"end":{"line":26,"column":1}},"children":[{"type":"text","value":"We will focus on shape representation.","position":{"start":{"line":26,"column":1},"end":{"line":26,"column":1}},"key":"JYM1JYyDhj"}],"key":"CQK6NkdK4W"}],"key":"gUYC9XEENc"}],"key":"vBTNfW3ZhY"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"In a large class of shape optimization problems the shapes of interest are ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Swcow5swCs"},{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"simple closed curves","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"yaNAWr3r5d"}],"key":"EYWSZ9rnBw"},{"type":"text","value":".\nSimple closed curves are curves that are ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"vQ3t6RIvtP"},{"type":"emphasis","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"closed","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"tSgwBC0sDz"}],"key":"opMsS9N2QL"},{"type":"text","value":", i.e. they form loops and are ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"VDXpmAWi1G"},{"type":"emphasis","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"simple","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"wLqclLjauG"}],"key":"gR1pdKTVoa"},{"type":"text","value":", i.e. they\ndo not self-intersect. Simple closed curves are also called ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"VCK1XmSzgX"},{"type":"emphasis","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Jordan curves","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"F7fs372iHb"}],"key":"Q9VrbcOYFX"},{"type":"text","value":".","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"URb2jd0OYm"}],"key":"XaccnApHe1"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Simple closed curves have applications in a diverse set of fields: aerospace design, biomedical\nmodeling, computer graphics, scientific modelling and simulation, gaming, object recognition etc.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"nwQkY60hPJ"}],"key":"FUXNmdfAL8"},{"type":"paragraph","position":{"start":{"line":8,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"text","value":"To understand why an optimization problem might be concerned only with simple closed curves consider\nthe following problem: Imagine that there is a flow going left ","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"FeWfyPHBsB"},{"type":"inlineMath","value":"\\to","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>→</mo></mrow><annotation encoding=\"application/x-tex\">\\to</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.3669em;\"></span><span class=\"mrel\">→</span></span></span></span>","key":"a2tp9HoNur"},{"type":"text","value":" right around the body shown in\n","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"dlPqXBQUYp"},{"type":"crossReference","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Figure ","key":"Qrl0tP4L0k"},{"type":"text","value":"1","key":"h5liQ3TldF"}],"identifier":"boundary_important_inside_spaghetti","label":"boundary_important_inside_spaghetti","kind":"figure","template":"Figure %s","enumerator":"1","resolved":true,"html_id":"boundary-important-inside-spaghetti","key":"Moxtig2F9G"},{"type":"text","value":", and consider the lift-to-drag ratio of this shape. The\nflow only sees the boundary of this shape, the complicated spaghetti inside does not have any effect\nwhatsoever on the properties of the body. All the representation used to describe the inner curves\nis wasteful.","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"zCYGExX4qj"}],"key":"aq0oP8aKtL"},{"type":"container","kind":"figure","children":[{"type":"image","url":"/boundary_important_i-a2bad0fd8f761db9443696e65d6ce7d0.svg","alt":"Figure showing a spline curve with a boundary and a complicated mess of self-intersecting spline inside.","height":"200px","key":"X31EhKj3G9","urlSource":"assets/boundary_important_inside_spaghetti.svg"},{"type":"caption","children":[{"type":"paragraph","position":{"start":{"line":19,"column":1},"end":{"line":20,"column":1}},"children":[{"type":"captionNumber","kind":"figure","label":"boundary_important_inside_spaghetti","identifier":"boundary_important_inside_spaghetti","html_id":"boundary-important-inside-spaghetti","enumerator":"1","children":[{"type":"text","value":"Figure ","key":"BGTuMi9Zq7"},{"type":"text","value":"1","key":"wuNfT3I803"},{"type":"text","value":":","key":"wMTCo8AAQO"}],"template":"Figure %s:","key":"Xog87MXpte"},{"type":"text","value":"An incoming flow would only interact with the boundary. The complicated internal mess is wasteful\nrepresentation.","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"key":"PUeUOfVa7j"}],"key":"gYFEX6XtOW"}],"key":"HI4ftD31Dy"}],"label":"boundary_important_inside_spaghetti","identifier":"boundary_important_inside_spaghetti","enumerator":"1","html_id":"boundary-important-inside-spaghetti","key":"RVOI5RReR1"},{"type":"paragraph","position":{"start":{"line":23,"column":1},"end":{"line":33,"column":1}},"children":[{"type":"text","value":"This is especially crucial when doing optimization. Shape representation methods that can\npotentially represent self-intersecting shapes would cause the optimization algorithm to search a\nbigger design space than needed. Also, self-intersecting shapes might be physically undesirable or\nproblematic to deal with in downstream tasks such as shape evaluation. Thus, such a shape\nparameterization would require manual tuning during optimization. As an e.g. consider the\noptimization happening in ","position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"key":"eG803i3LUj"},{"type":"crossReference","position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"children":[{"type":"text","value":"Figure ","key":"tEvDWpfBvI"},{"type":"text","value":"2","key":"t1YnGjWWJf"}],"identifier":"spline_self_intersecting_during_optimization","label":"spline_self_intersecting_during_optimization","kind":"figure","template":"Figure %s","enumerator":"2","resolved":true,"html_id":"spline-self-intersecting-during-optimization","key":"gOKtdZ8tEo"},{"type":"text","value":". We represent the shape\nusing 12 spline control points which are then fed into a neural network that predicts the shape’s\nlift-to-drag ratio. During training we used non-self-intersecting shapes as they are the ones of\ninterest, but during optimization, if after a gradient step the spline starts intersecting the\nnetwork struggles to predict its lift-to-drag ratio and steers the optimization in an even worse\ndirection. This is the classical ","position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"key":"mpZ4uYx7S3"},{"type":"emphasis","position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"children":[{"type":"text","value":"distributional shift","position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"key":"P1dNGQ6Lxc"}],"key":"btBPsM2VPb"},{"type":"text","value":" problem.","position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"key":"EaXgOjOcJ5"}],"key":"ScKK2oiMln"},{"type":"container","kind":"figure","children":[{"type":"image","url":"/spline_self_intersec-829b4b874453645e40b12f42d37bba6c.gif","alt":"Optimization starts from the dashed red initial airfoil shape which is iteratively modified. We see\nthat the optimization process suffers from distributional shift. Once a self-intersecting shape is\nreached it is iteratively made even worse.","height":"200px","data":{"altTextIsAutoGenerated":true},"key":"e1YwrFn2zu","urlSource":"assets/spline_self_intersecting_during_optimization.gif"},{"type":"caption","children":[{"type":"paragraph","position":{"start":{"line":37,"column":1},"end":{"line":39,"column":1}},"children":[{"type":"captionNumber","kind":"figure","label":"spline_self_intersecting_during_optimization","identifier":"spline_self_intersecting_during_optimization","html_id":"spline-self-intersecting-during-optimization","enumerator":"2","children":[{"type":"text","value":"Figure ","key":"Lt3twxjy43"},{"type":"text","value":"2","key":"GYjFQLk1Nh"},{"type":"text","value":":","key":"T66yRZlJqt"}],"template":"Figure %s:","key":"mdMAPasj8o"},{"type":"text","value":"Optimization starts from the dashed red initial airfoil shape which is iteratively modified. We see\nthat the optimization process suffers from distributional shift. Once a self-intersecting shape is\nreached it is iteratively made even worse.","position":{"start":{"line":37,"column":1},"end":{"line":37,"column":1}},"key":"ctiSOKCvmD"}],"key":"OnODyDRx9w"}],"key":"dWTl4M0nwE"}],"label":"spline_self_intersecting_during_optimization","identifier":"spline_self_intersecting_during_optimization","enumerator":"2","html_id":"spline-self-intersecting-during-optimization","key":"vQbrTynh8A"},{"type":"paragraph","position":{"start":{"line":42,"column":1},"end":{"line":49,"column":1}},"children":[{"type":"text","value":"When using shape parameterization that can represent self-intersecting shapes the optimization\nalgorithm’s search has to be made limited, or someone has to sit and manually tune and check for\nself-intersection. Sometimes additional losses are added to the objective to prevent\nself-intersection. This is a hassle. In effect prevents an automated and aggressive shape space\nexploration. In an ideal setting, one would like to leave gradient descent running and go to sleep\nand wake up to find the optimal shape. Thus we need a shape parameterization that has the quality of\nnon-self-intersection in-built and for any set of parameters produces non-self-intersecting shapes\nonly.","position":{"start":{"line":42,"column":1},"end":{"line":42,"column":1}},"key":"JoFveGcCyN"}],"key":"u5f0lAtoDd"}],"key":"vNRQDIb2Fb"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Naive Usage of Polar Coordinates: The Representation Power Problem.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"sLmK3AC3xF"}],"identifier":"naive-usage-of-polar-coordinates-the-representation-power-problem","label":"Naive Usage of Polar Coordinates: The Representation Power Problem.","html_id":"naive-usage-of-polar-coordinates-the-representation-power-problem","implicit":true,"key":"mgSTGgaKs2"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"One simple way of representing non-self-intersecting shapes would be through polar coordinates in\nthe form:","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"YhYGkqaSkF"}],"key":"waz7RmloIv"},{"type":"math","value":"\nr = f(\\theta), \\quad \\theta \\in [0, 2\\pi)","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"tight":true,"html":"<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>r</mi><mo>=</mo><mi>f</mi><mo stretchy=\"false\">(</mo><mi>θ</mi><mo stretchy=\"false\">)</mo><mo separator=\"true\">,</mo><mspace width=\"1em\"/><mi>θ</mi><mo>∈</mo><mo stretchy=\"false\">[</mo><mn>0</mn><mo separator=\"true\">,</mo><mn>2</mn><mi>π</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\nr = f(\\theta), \\quad \\theta \\in [0, 2\\pi)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">2</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span><span class=\"mclose\">)</span></span></span></span></span>","enumerator":"1","key":"WUrWm2p4pJ"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"where we would represent ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"yjmLfT2wrY"},{"type":"inlineMath","value":"f","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi></mrow><annotation encoding=\"application/x-tex\">f</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span></span></span>","key":"VpuavjefxW"},{"type":"text","value":" using some parameterized form, e.g. neural networks.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"D3Bo5WRyj1"}],"key":"P4j18InJBO"},{"type":"paragraph","position":{"start":{"line":9,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"But this representation cannot describe ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"iI40tH6nt8"},{"type":"strong","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"general","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"BF5JXp0BG4"}],"key":"MxhrI5Vq0F"},{"type":"text","value":" simple closed curves. This is because ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"Dwkxjj3K8o"},{"type":"inlineMath","value":"r","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>r</mi></mrow><annotation encoding=\"application/x-tex\">r</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span></span></span></span>","key":"HIlMkPiZsQ"},{"type":"text","value":" is\nparameterized as a function of ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"VtCa1cU4MM"},{"type":"text","value":"θ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"pZKAw3hhYW"},{"type":"text","value":" and for a given ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"uV08jGAaHP"},{"type":"text","value":"θ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"oiEA6Iirxy"},{"type":"text","value":" we can only have one value of ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"tZZnbyfEjL"},{"type":"inlineMath","value":"r","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>r</mi></mrow><annotation encoding=\"application/x-tex\">r</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span></span></span></span>","key":"kCtSTKVpBN"},{"type":"text","value":".\nThis means we cannot represent shapes as shown in ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"n9mGgY2oN3"},{"type":"crossReference","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Figure ","key":"KiAGpLH28g"},{"type":"text","value":"3","key":"SGmrexOvNJ"}],"identifier":"polar_problem","label":"polar_problem","kind":"figure","template":"Figure %s","enumerator":"3","resolved":true,"html_id":"polar-problem","key":"tgeWtCjOGh"},{"type":"text","value":".","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"H5Q2zQpSav"}],"key":"dBUN8LsedH"},{"type":"container","kind":"figure","children":[{"type":"image","url":"/polar_problem-8aa858dec0c2c99b9bea92b4cef05fb9.svg","alt":"Figure showing a curve that has two r values at a single theta.","height":"350px","key":"rLhMfgn6RV","urlSource":"assets/polar_problem.svg"},{"type":"caption","children":[{"type":"paragraph","position":{"start":{"line":17,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"captionNumber","kind":"figure","label":"polar_problem","identifier":"polar_problem","html_id":"polar-problem","enumerator":"3","children":[{"type":"text","value":"Figure ","key":"h27TuqafVL"},{"type":"text","value":"3","key":"m5iPNbYmGd"},{"type":"text","value":":","key":"lJ2dyn1c1W"}],"template":"Figure %s:","key":"fOtYLmDXxU"},{"type":"text","value":"Since we have multiple ","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"key":"eKeuvU7IVv"},{"type":"inlineMath","value":"r","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>r</mi></mrow><annotation encoding=\"application/x-tex\">r</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span></span></span></span>","key":"ieIVQgoZ67"},{"type":"text","value":" values at a single ","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"key":"HPjbBFzBIS"},{"type":"text","value":"θ","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"key":"K91RPnxaSW"},{"type":"text","value":" we cannot have a function that can represent\nthis.","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"key":"pXHvdAW6nY"}],"key":"ZzWn9Jafqg"}],"key":"YNKtLWXugK"}],"label":"polar_problem","identifier":"polar_problem","enumerator":"3","html_id":"polar-problem","key":"OcGypBogsH"},{"type":"paragraph","position":{"start":{"line":21,"column":1},"end":{"line":24,"column":1}},"children":[{"type":"text","value":"Therefore we would not be able to analyze a fish swimming in water as shown in ","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"key":"SJRduO1HGl"},{"type":"crossReference","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"children":[{"type":"text","value":"Figure ","key":"VYvDpFFoAD"},{"type":"text","value":"4","key":"bDLDuxP4tW"}],"identifier":"fish_swimming","label":"fish_swimming","kind":"figure","template":"Figure %s","enumerator":"4","resolved":true,"html_id":"fish-swimming","key":"lRUk080tHL"},{"type":"text","value":".\nOr if for whatever reason the optimal design was the ","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"key":"fJMpFNgvjr"},{"type":"crossReference","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"children":[{"type":"text","value":"Stanford Bunny","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"key":"Z9tN6hH1hU"}],"identifier":"stanford_bunny","label":"stanford_bunny","kind":"figure","template":"Figure %s","enumerator":"5","resolved":true,"html_id":"stanford-bunny","key":"DfxxgTliIq"},{"type":"text","value":", we would not\nbe able to design for it (jokes apart we will use the Stanford Bunny as a target shape to test our\nshape representation techniques).","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"key":"E0eIvwHrWh"}],"key":"ofckbWGxHe"},{"type":"grid","columns":[2],"children":[{"type":"div","children":[{"type":"container","kind":"figure","children":[{"type":"image","url":"/fish_swimming-5c37eb3babf9b14a683f446e62f27fcc.svg","alt":"Fish swimming with its body in a curve shape not representable in polar coordinates.","height":"350px","key":"SnLzJUVLOO","urlSource":"assets/fish_swimming.svg"},{"type":"caption","children":[{"type":"paragraph","position":{"start":{"line":33,"column":1},"end":{"line":33,"column":1}},"children":[{"type":"captionNumber","kind":"figure","label":"fish_swimming","identifier":"fish_swimming","html_id":"fish-swimming","enumerator":"4","children":[{"type":"text","value":"Figure ","key":"HcGrn9ahS1"},{"type":"text","value":"4","key":"w2y9uLPFP0"},{"type":"text","value":":","key":"aNefCXAZjT"}],"template":"Figure %s:","key":"gjRLreDVSh"},{"type":"text","value":"A swimming fish with its body curved cannot be represented by a polar parameterization.","position":{"start":{"line":33,"column":1},"end":{"line":33,"column":1}},"key":"d007cGvL3Z"}],"key":"FVVA2mSW5h"}],"key":"qkcvdXstv5"}],"label":"fish_swimming","identifier":"fish_swimming","enumerator":"4","html_id":"fish-swimming","key":"PHVixbcLGn"}],"key":"VMmqQCSke1"},{"type":"div","children":[{"type":"container","kind":"figure","children":[{"type":"image","url":"/stanford_bunny-ff229240b51ddacea44a5bb5059b6f90.svg","alt":"The Stanford Bunny shown as a target curve.","height":"225px","key":"ySrqVmEPXx","urlSource":"assets/stanford_bunny.svg"},{"type":"caption","children":[{"type":"paragraph","position":{"start":{"line":42,"column":1},"end":{"line":43,"column":1}},"children":[{"type":"captionNumber","kind":"figure","label":"stanford_bunny","identifier":"stanford_bunny","html_id":"stanford-bunny","enumerator":"5","children":[{"type":"text","value":"Figure ","key":"wZ309wXqhH"},{"type":"text","value":"5","key":"kWHOzc3TQq"},{"type":"text","value":":","key":"zmD2YQ3o3F"}],"template":"Figure %s:","key":"XyiQCU8bgx"},{"type":"text","value":"The ","position":{"start":{"line":42,"column":1},"end":{"line":42,"column":1}},"key":"S31eUnMnij"},{"type":"link","url":"https://en.wikipedia.org/wiki/Stanford_bunny","position":{"start":{"line":42,"column":1},"end":{"line":42,"column":1}},"children":[{"type":"text","value":"Stanford Bunny","position":{"start":{"line":42,"column":1},"end":{"line":42,"column":1}},"key":"p4jKgMyckw"}],"urlSource":"https://en.wikipedia.org/wiki/Stanford_bunny","data":{"page":"Stanford_bunny","wiki":"https://en.wikipedia.org/","lang":"en"},"internal":false,"protocol":"wiki","key":"BDsvPoMkp9"},{"type":"text","value":". We will use it as\na target shape against which we test our parameterization techniques.","position":{"start":{"line":42,"column":1},"end":{"line":42,"column":1}},"key":"JPXPjHyvov"}],"key":"Ni3zEQIpOz"}],"key":"nmEijPkg1r"}],"label":"stanford_bunny","identifier":"stanford_bunny","enumerator":"5","html_id":"stanford-bunny","key":"S5HhZVd4l5"}],"key":"Gc6aQNaZIw"}],"key":"g8tDa4AVcB"}],"key":"HLcK6or8WX"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"We now discuss a new method for shape parameterization that can describe general simple closed\ncurves. This method ensures that only non-self-intersecting curves are generated for any combination\nof the parameters. The central idea behind this geometry parameterization is the concept of\n","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"iJT4ayftOi"},{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"emphasis","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"injective networks","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"OMyd263N7Y"}],"key":"qdYQ7hmi0V"}],"key":"i9GtW5JnGA"},{"type":"text","value":" which we discuss next.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"pbyMpUjBDc"}],"key":"XwrP5eTPuA"}],"key":"YxKO2LC7gO"}],"key":"LZ7mgMNJLm"},"references":{"cite":{"order":[],"data":{}}}}
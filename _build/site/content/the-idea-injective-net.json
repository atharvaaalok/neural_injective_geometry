{"kind":"Notebook","sha256":"b0cfd36cc70bac78b91ca490ac4a3264b530538cfa1c26437728499d603bb1f9","slug":"the-idea-injective-net","location":"/the_idea_injective_net.ipynb","dependencies":[],"frontmatter":{"title":"Injective Networks","subtitle":"The Central Idea behind Neural Injective Geometry","date":"2025-01-22","kernelspec":{"name":"python3","display_name":"Python 3","language":"python"},"authors":[{"nameParsed":{"literal":"Atharva Aalok","given":"Atharva","family":"Aalok"},"name":"Atharva Aalok","corresponding":true,"email":"atharvaaalok@gmail.com","affiliations":["Stanford University"],"twitter":"atharvaaalok","github":"atharvaaalok","id":"contributors-myst-generated-uid-0"}],"github":"https://github.com/atharvaaalok/neural_injective_geometry","affiliations":[{"id":"Stanford University","name":"Stanford University"}],"thumbnail":"/curve_types-51f2a05f39efb383d540e8328dc8dbe1.svg","exports":[{"format":"ipynb","filename":"the_idea_injective_net.ipynb","url":"/the_idea_injective_n-87b791903f6aa3ae1e75b7fa9b559405.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"%pip install numpy","key":"giXGbMGOCI"},{"type":"output","id":"Sc0zl5c_N2waplp1AmCI_","data":[{"name":"stdout","output_type":"stream","text":"Requirement already satisfied: numpy in /Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages (2.2.1)\nNote: you may need to restart the kernel to use updated packages.\n"}],"key":"Z6DWWTI8ft"}],"key":"rHOvcAMTrY"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Neural Injective Curves","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"tGu0omrq0s"}],"identifier":"neural-injective-curves","label":"Neural Injective Curves","html_id":"neural-injective-curves","implicit":true,"key":"ag175klRRm"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"We now discuss the abstract idea behind our shape parameterization to represent general simple\nclosed curves in the plane. As we shall see, this approach is conceptual and to actually create\ncurves a construction method is needed. Our method is based on neural networks with special\narchitectures that work as construction methods. We will see that the basic neural network\narchitecture is a very natural approach for constructing non-self-intersecting curves.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"F2kmAAEujj"}],"key":"kE6mGZtp8s"}],"key":"ZBDi0kmCTj"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Cartesian Neural Injective Curves","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"yAjurXlMZc"}],"identifier":"cartesian-neural-injective-curves","label":"Cartesian Neural Injective Curves","html_id":"cartesian-neural-injective-curves","implicit":true,"key":"zt48ivqnEQ"}],"key":"Jbm38Z19vV"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Consider the following parameterization to represent curves:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"OEwcdAfoGE"}],"key":"YMtERxfuWa"},{"type":"math","tight":true,"value":"\\begin{align*}\nx &= f(t)\\\\\ny &= g(t), \\quad t \\in [0, 1]\n\\end{align*}","position":{"start":{"line":2,"column":1},"end":{"line":4,"column":1}},"html":"<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.25em\" columnalign=\"right left\" columnspacing=\"0em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mi>x</mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mi>f</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mi>y</mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mi>g</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo separator=\"true\">,</mo><mspace width=\"1em\"/><mi>t</mi><mo>∈</mo><mo stretchy=\"false\">[</mo><mn>0</mn><mo separator=\"true\">,</mo><mn>1</mn><mo stretchy=\"false\">]</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{align*}\nx &amp;= f(t)\\\\\ny &amp;= g(t), \\quad t \\in [0, 1]\n\\end{align*}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:3em;vertical-align:-1.25em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.75em;\"><span style=\"top:-3.91em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.25em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.75em;\"><span style=\"top:-3.91em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mopen\">[</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.25em;\"><span></span></span></span></span></span></span></span></span></span></span></span>","enumerator":"1","key":"YXPxtegA26"},{"type":"paragraph","position":{"start":{"line":6,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"This representation can potentially represent any curve in the plane not necessarily simple and\nclosed.  Thus it is ","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"j57YcPBzCB"},{"type":"emphasis","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"too broad","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"Pn7RWsusnw"}],"key":"mWB5VUGQrm"},{"type":"text","value":", we want the functions ","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"mREYrIMzfT"},{"type":"inlineMath","value":"f","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi></mrow><annotation encoding=\"application/x-tex\">f</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span></span></span>","key":"AZ2nTyMR1A"},{"type":"text","value":" and ","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"YI8NIMRAEO"},{"type":"inlineMath","value":"g","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>g</mi></mrow><annotation encoding=\"application/x-tex\">g</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span></span></span></span>","key":"LWfUGaLIem"},{"type":"text","value":" to be such that we only\nrepresent ","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"QWUmzlP8Im"},{"type":"strong","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"simple","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"HvTdBFYWci"}],"key":"RC53FFY37l"},{"type":"text","value":" and ","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"Ap0FMubIPu"},{"type":"strong","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"closed","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"xUVQAAVdzx"}],"key":"A49WPjnWUz"},{"type":"text","value":" curves.","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"EeflMaK1b3"}],"key":"lrRLtDxrnS"},{"type":"container","kind":"figure","children":[{"type":"image","url":"/curve_types-51f2a05f39efb383d540e8328dc8dbe1.svg","alt":"Four types of curves: simple/not simple + closed/not closed","height":"290px","key":"S3uYyoXhV0","urlSource":"assets/curve_types.svg"},{"type":"caption","children":[{"type":"paragraph","position":{"start":{"line":14,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"captionNumber","kind":"figure","label":"curve_types","identifier":"curve_types","html_id":"curve-types","enumerator":"1","children":[{"type":"text","value":"Figure ","key":"H7USydEuTX"},{"type":"text","value":"1","key":"CDj7rmw8jE"},{"type":"text","value":":","key":"jlLimARRx8"}],"template":"Figure %s:","key":"m3cln1RdRC"},{"type":"text","value":"We will be concerned with simple closed curves, i.e. curves that loop back and do not\nself-intersect.","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"MhLrBudO1t"}],"key":"JaIDNZJO09"}],"key":"RFPfpCp0JU"}],"label":"curve_types","identifier":"curve_types","enumerator":"1","html_id":"curve-types","key":"MhOi8Cs1Gg"},{"type":"definitionList","position":{"start":{"line":18,"column":1},"end":{"line":30,"column":1}},"children":[{"type":"definitionTerm","position":{"start":{"line":18,"column":1},"end":{"line":17,"column":1}},"children":[{"type":"text","value":"Simple","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"key":"bxrcsaOJl6"}],"key":"eY8mQ6YNG5"},{"type":"definitionDescription","position":{"start":{"line":19,"column":1},"end":{"line":24,"column":1}},"children":[{"type":"text","value":"A curve is simple if it does not self-intersect. That is, two different ","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"key":"Z3QjHLMUrU"},{"type":"inlineMath","value":"t","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi></mrow><annotation encoding=\"application/x-tex\">t</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><span class=\"mord mathnormal\">t</span></span></span></span>","key":"AkGGQUBPdE"},{"type":"text","value":" values should not map\nto the same point in the plane. Mathematically,\n","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"key":"L68qEMEuyR"},{"type":"math","value":"\nt_1 \\neq t_2 \\implies (x(t_1), y(t_1)) \\neq (x(t_2), y(t_2))","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"html":"<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>t</mi><mn>1</mn></msub><mo mathvariant=\"normal\">≠</mo><msub><mi>t</mi><mn>2</mn></msub><mtext>  </mtext><mo>⟹</mo><mtext>  </mtext><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">(</mo><msub><mi>t</mi><mn>1</mn></msub><mo stretchy=\"false\">)</mo><mo separator=\"true\">,</mo><mi>y</mi><mo stretchy=\"false\">(</mo><msub><mi>t</mi><mn>1</mn></msub><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo><mo mathvariant=\"normal\">≠</mo><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">(</mo><msub><mi>t</mi><mn>2</mn></msub><mo stretchy=\"false\">)</mo><mo separator=\"true\">,</mo><mi>y</mi><mo stretchy=\"false\">(</mo><msub><mi>t</mi><mn>2</mn></msub><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\nt_1 \\neq t_2 \\implies (x(t_1), y(t_1)) \\neq (x(t_2), y(t_2))</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\"><span class=\"mrel\"><span class=\"mord vbox\"><span class=\"thinbox\"><span class=\"rlap\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"inner\"><span class=\"mord\"><span class=\"mrel\"></span></span></span><span class=\"fix\"></span></span></span></span></span><span class=\"mrel\">=</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7651em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">⟹</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">))</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\"><span class=\"mrel\"><span class=\"mord vbox\"><span class=\"thinbox\"><span class=\"rlap\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"inner\"><span class=\"mord\"><span class=\"mrel\"></span></span></span><span class=\"fix\"></span></span></span></span></span><span class=\"mrel\">=</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">))</span></span></span></span></span>","enumerator":"2","key":"powPM8j5QU"}],"key":"yKCkCBqYBV"},{"type":"definitionTerm","position":{"start":{"line":25,"column":1},"end":{"line":24,"column":1}},"children":[{"type":"text","value":"Closed","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"rLFu8Q6VQX"}],"key":"n8EhDVkG5U"},{"type":"definitionDescription","position":{"start":{"line":25,"column":1},"end":{"line":30,"column":1}},"children":[{"type":"text","value":"A curve is ","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"IaBZRIODlT"},{"type":"emphasis","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"children":[{"type":"text","value":"closed","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"UwZUL8kOkW"}],"key":"gllbda01Ip"},{"type":"text","value":" if the starting and the ending points are the same. Mathematically,\n","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"KnVk8vUbYo"},{"type":"math","value":"\n(x(0), y(0)) = (x(1), y(1))","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"html":"<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">(</mo><mn>0</mn><mo stretchy=\"false\">)</mo><mo separator=\"true\">,</mo><mi>y</mi><mo stretchy=\"false\">(</mo><mn>0</mn><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo><mo>=</mo><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo separator=\"true\">,</mo><mi>y</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\n(x(0), y(0)) = (x(1), y(1))</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mopen\">(</span><span class=\"mord\">0</span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mopen\">(</span><span class=\"mord\">0</span><span class=\"mclose\">))</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">))</span></span></span></span></span>","enumerator":"3","key":"j90fZ25zti"}],"key":"RvdgQKYOBZ"}],"key":"F8o0UIOojt"},{"type":"paragraph","position":{"start":{"line":31,"column":1},"end":{"line":33,"column":1}},"children":[{"type":"text","value":"If these additional constraints are satisfied by the functions ","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"key":"DBiEHzF8qm"},{"type":"inlineMath","value":"f","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi></mrow><annotation encoding=\"application/x-tex\">f</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span></span></span>","key":"LofhrOP0RC"},{"type":"text","value":" and ","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"key":"YQ8rgemgfw"},{"type":"inlineMath","value":"g","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>g</mi></mrow><annotation encoding=\"application/x-tex\">g</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span></span></span></span>","key":"dPDwEtN1ug"},{"type":"text","value":" then the curves\ngenerated will be guaranteed to be simple closed curves. We now discuss a way of constructing\nfunctions ","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"key":"U986aEPUgh"},{"type":"inlineMath","value":"f","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi></mrow><annotation encoding=\"application/x-tex\">f</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span></span></span>","key":"xFosavkKW1"},{"type":"text","value":" and ","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"key":"PX1BHOFozj"},{"type":"inlineMath","value":"g","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>g</mi></mrow><annotation encoding=\"application/x-tex\">g</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span></span></span></span>","key":"zqIeKu1ird"},{"type":"text","value":" such that they always satisfy these constraints.","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"key":"fy45rwig2e"}],"key":"TlgWh3F3eF"},{"type":"paragraph","position":{"start":{"line":35,"column":1},"end":{"line":39,"column":1}},"children":[{"type":"text","value":"To create a construction mechanism we need to first look at the problem differently through a single\nvector-valued mapping instead of two scalar-valued functions ","position":{"start":{"line":35,"column":1},"end":{"line":35,"column":1}},"key":"Wtac3tNpOW"},{"type":"inlineMath","value":"f","position":{"start":{"line":35,"column":1},"end":{"line":35,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi></mrow><annotation encoding=\"application/x-tex\">f</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span></span></span>","key":"qRlfFzwizu"},{"type":"text","value":" and ","position":{"start":{"line":35,"column":1},"end":{"line":35,"column":1}},"key":"o8dvyDC9MM"},{"type":"inlineMath","value":"g","position":{"start":{"line":35,"column":1},"end":{"line":35,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>g</mi></mrow><annotation encoding=\"application/x-tex\">g</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span></span></span></span>","key":"KK04MEiS8k"},{"type":"text","value":". Consider also, instead of\ntwo scalar values ","position":{"start":{"line":35,"column":1},"end":{"line":35,"column":1}},"key":"kYv3FGjetX"},{"type":"inlineMath","value":"x","position":{"start":{"line":35,"column":1},"end":{"line":35,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span>","key":"RCLz68UzlV"},{"type":"text","value":" and ","position":{"start":{"line":35,"column":1},"end":{"line":35,"column":1}},"key":"FrmlgoUcck"},{"type":"inlineMath","value":"y","position":{"start":{"line":35,"column":1},"end":{"line":35,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span>","key":"BHkcihSeRh"},{"type":"text","value":", a single vector which has the two values stacked ","position":{"start":{"line":35,"column":1},"end":{"line":35,"column":1}},"key":"cV92SEOmYf"},{"type":"inlineMath","value":"[x, y]^{T}","position":{"start":{"line":35,"column":1},"end":{"line":35,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><msup><mo stretchy=\"false\">]</mo><mi>T</mi></msup></mrow><annotation encoding=\"application/x-tex\">[x, y]^{T}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0913em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\"><span class=\"mclose\">]</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8413em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span></span></span></span></span></span></span></span></span>","key":"MbEowwmhrh"},{"type":"text","value":".\nThis vector is parameterized as before through a parameter ","position":{"start":{"line":35,"column":1},"end":{"line":35,"column":1}},"key":"PoN51x4DUO"},{"type":"inlineMath","value":"t","position":{"start":{"line":35,"column":1},"end":{"line":35,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi></mrow><annotation encoding=\"application/x-tex\">t</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><span class=\"mord mathnormal\">t</span></span></span></span>","key":"PZnpp7m3Rd"},{"type":"text","value":". Concretely, consider a vector-valued\nmapping ","position":{"start":{"line":35,"column":1},"end":{"line":35,"column":1}},"key":"SoUSCLVe1a"},{"type":"inlineMath","value":"F","position":{"start":{"line":35,"column":1},"end":{"line":35,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi></mrow><annotation encoding=\"application/x-tex\">F</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span></span></span></span>","key":"KRUI2cp1nL"},{"type":"text","value":" that maps ","position":{"start":{"line":35,"column":1},"end":{"line":35,"column":1}},"key":"rxaWsTLIqC"},{"type":"inlineMath","value":"t","position":{"start":{"line":35,"column":1},"end":{"line":35,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi></mrow><annotation encoding=\"application/x-tex\">t</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><span class=\"mord mathnormal\">t</span></span></span></span>","key":"ZE4xDrPsO1"},{"type":"text","value":" to the vector of ","position":{"start":{"line":35,"column":1},"end":{"line":35,"column":1}},"key":"Cj87lkfOKn"},{"type":"inlineMath","value":"x","position":{"start":{"line":35,"column":1},"end":{"line":35,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span>","key":"bil1avBh5N"},{"type":"text","value":" and ","position":{"start":{"line":35,"column":1},"end":{"line":35,"column":1}},"key":"o2s8VFkhRk"},{"type":"inlineMath","value":"y","position":{"start":{"line":35,"column":1},"end":{"line":35,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span>","key":"T36RCfDSXT"},{"type":"text","value":".","position":{"start":{"line":35,"column":1},"end":{"line":35,"column":1}},"key":"mejrRKfIv8"}],"key":"nrVtWsO5oJ"},{"type":"math","value":"F: t \\rightarrow\n\\begin{bmatrix}\nx\\\\\ny\n\\end{bmatrix}","tight":"before","html":"<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>F</mi><mo>:</mo><mi>t</mi><mo>→</mo><mrow><mo fence=\"true\">[</mo><mtable rowspacing=\"0.16em\" columnalign=\"center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>x</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>y</mi></mstyle></mtd></mtr></mtable><mo fence=\"true\">]</mo></mrow></mrow><annotation encoding=\"application/x-tex\">F: t \\rightarrow\n\\begin{bmatrix}\nx\\\\\ny\n\\end{bmatrix}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.4em;vertical-align:-0.95em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size3\">[</span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.45em;\"><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.95em;\"><span></span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size3\">]</span></span></span></span></span></span></span>","enumerator":"4","key":"JoCk6W6gV1"}],"key":"AvMH4kW3Bc"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":4,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Condition 1 - Simple Curves","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"CyJBFBOjzo"}],"identifier":"condition-1-simple-curves","label":"Condition 1 - Simple Curves","html_id":"condition-1-simple-curves","implicit":true,"key":"Uvm5QD0wXJ"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"For the curves represented through the mapping ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"XjGVt58ZIz"},{"type":"inlineMath","value":"F","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi></mrow><annotation encoding=\"application/x-tex\">F</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span></span></span></span>","key":"oIflEMnaP3"},{"type":"text","value":" to be simple, we need ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"NKHf0tE5vE"},{"type":"inlineMath","value":"F","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi></mrow><annotation encoding=\"application/x-tex\">F</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span></span></span></span>","key":"sy4VERniHU"},{"type":"text","value":" to be an\n","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"pJyJd9eTt6"},{"type":"link","url":"https://en.wikipedia.org/wiki/Injective_function","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"injective","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"WVmSKl5EdL"}],"urlSource":"https://en.wikipedia.org/wiki/Injective_function","data":{"page":"Injective_function","wiki":"https://en.wikipedia.org/","lang":"en"},"internal":false,"protocol":"wiki","key":"hA0BFU4nbQ"},{"type":"text","value":" map as then every ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"GmsP7Ohlm9"},{"type":"inlineMath","value":"t","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi></mrow><annotation encoding=\"application/x-tex\">t</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><span class=\"mord mathnormal\">t</span></span></span></span>","key":"XnKsSPVd9o"},{"type":"text","value":" value will map\nto a different point in the plane and does not self-intersect. We will now see how neural networks\nare quite naturally suited for this.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"GGWfipJu4w"}],"key":"HkBzcXlzQA"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Consider the specific neural network architecture shown in\n","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"HhglFiHysd"},{"type":"crossReference","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Figure ","key":"Dm2nCVZOvt"},{"type":"text","value":"2","key":"bWKDhQ7FGW"}],"identifier":"neural_network_architecture_injective","label":"neural_network_architecture_injective","kind":"figure","template":"Figure %s","enumerator":"2","resolved":true,"html_id":"neural-network-architecture-injective","key":"N7naHeqs0z"},{"type":"text","value":":","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"qlKdQv5hHc"}],"key":"lAerU9TOzL"},{"type":"container","kind":"figure","children":[{"type":"image","url":"/neural_network_archi-41760c6c9fafe514fcb2577122aa2eff.svg","alt":"Figure showing a basic neural network architecture that preserves injectivity at each layer.","height":"210px","key":"m8V49Z2vcB","urlSource":"assets/neural_network_architecture_injective.svg"},{"type":"caption","children":[{"type":"paragraph","position":{"start":{"line":13,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"captionNumber","kind":"figure","label":"neural_network_architecture_injective","identifier":"neural_network_architecture_injective","html_id":"neural-network-architecture-injective","enumerator":"2","children":[{"type":"text","value":"Figure ","key":"yWJZDSUxtl"},{"type":"text","value":"2","key":"kTrtRH0V0f"},{"type":"text","value":":","key":"yC9cWGG1hb"}],"template":"Figure %s:","key":"Tr4CXHcfA4"},{"type":"text","value":"If each layer is injective then the composition of these i.e. the entire network will also be\ninjective.","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"FU4bGBZHL0"}],"key":"TJMJVPljU2"}],"key":"wQgi60ivKM"}],"label":"neural_network_architecture_injective","identifier":"neural_network_architecture_injective","enumerator":"2","html_id":"neural-network-architecture-injective","key":"jkOPvfTQEm"},{"type":"paragraph","position":{"start":{"line":17,"column":1},"end":{"line":28,"column":1}},"children":[{"type":"text","value":"We now see each transformation of the network one by one. At the first layer the mapping from ","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"key":"jd5qL6XLYJ"},{"type":"inlineMath","value":"t","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi></mrow><annotation encoding=\"application/x-tex\">t</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><span class=\"mord mathnormal\">t</span></span></span></span>","key":"MyerYaq70j"},{"type":"text","value":" to\na vector ","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"key":"Li6IQhDc8a"},{"type":"inlineMath","value":"At","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mi>t</mi></mrow><annotation encoding=\"application/x-tex\">At</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\">t</span></span></span></span>","key":"oI6UVyiNAZ"},{"type":"text","value":" of ","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"key":"FeNLmmHnqu"},{"type":"inlineMath","value":"\\dim 2","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>dim</mi><mo>⁡</mo><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">\\dim 2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mop\">dim</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">2</span></span></span></span>","key":"KQJ596H6lt"},{"type":"text","value":" is performed by a column vector ","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"key":"Y4RS2R4M9h"},{"type":"inlineMath","value":"A","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span>","key":"Dclc4m1ahp"},{"type":"text","value":" and is one to one. The next mapping\nby a non-linear activation function ","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"key":"wAyLqo70u6"},{"type":"inlineMath","value":"\\sigma(z)","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>σ</mi><mo stretchy=\"false\">(</mo><mi>z</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\sigma(z)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mclose\">)</span></span></span></span>","key":"GbNJ5fnHnp"},{"type":"text","value":" is an element-wise mapping. If we choose our\nactivation function to be an injective function, such as the sigmoid, PReLU, ELU etc. then the\nmapping it produces from one vector to the next will also be injective. Note here that we cannot use\nthe ReLU as it is not an injective function. Now consider the mapping from a ","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"key":"NaBbb2hTWp"},{"type":"inlineMath","value":"\\dim 2","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>dim</mi><mo>⁡</mo><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">\\dim 2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mop\">dim</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">2</span></span></span></span>","key":"uQQ0LPldkq"},{"type":"text","value":" vector to\nanother produced by some ","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"key":"rz8YFPncKP"},{"type":"inlineMath","value":"2 \\times 2","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2</mn><mo>×</mo><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">2 \\times 2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">2</span></span></span></span>","key":"NuN4cbWK3P"},{"type":"text","value":" matrix ","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"key":"QFcvthzljV"},{"type":"inlineMath","value":"B","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span>","key":"PMqmhQYi13"},{"type":"text","value":". ","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"key":"SahJ3y7cHQ"},{"type":"emphasis","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"children":[{"type":"text","value":"This mapping is injective with probability 1!","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"key":"NiROhWmLRk"}],"key":"nzu01jklOv"},{"type":"text","value":"\n","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"key":"yo0ViN04hx"},{"type":"footnoteReference","identifier":"injective_matrix_probability","label":"injective_matrix_probability","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"number":1,"enumerator":"1","key":"oeDDvIcnTb"},{"type":"text","value":". That is, if we generate a random ","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"key":"JSpeUthzEm"},{"type":"inlineMath","value":"2 \\times 2","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2</mn><mo>×</mo><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">2 \\times 2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">2</span></span></span></span>","key":"B3hkYFaYRs"},{"type":"text","value":" matrix ","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"key":"kbw8E5Am6H"},{"type":"inlineMath","value":"B","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span>","key":"c3H1K0CtgZ"},{"type":"text","value":" then it is\ninjective with probability 1. The neural network is composed of these linear and non-linear mappings\nin a sequence. Since the composition of two injective mappings is injective","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"key":"Ymde7j058D"},{"type":"footnoteReference","identifier":"injective_composition","label":"injective_composition","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"number":2,"enumerator":"2","key":"gIxjPZT9Tl"},{"type":"text","value":",\nthe entire network is injective as a whole. Thus the mapping ","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"key":"JoaSfCQGvA"},{"type":"inlineMath","value":"F","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi></mrow><annotation encoding=\"application/x-tex\">F</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span></span></span></span>","key":"GbSJbLOCqs"},{"type":"text","value":" from ","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"key":"Lj95Awu098"},{"type":"inlineMath","value":"t","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi></mrow><annotation encoding=\"application/x-tex\">t</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><span class=\"mord mathnormal\">t</span></span></span></span>","key":"V1no6yFkqd"},{"type":"text","value":" to ","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"key":"cgiRwxFVOq"},{"type":"inlineMath","value":"[x, y]^{T}","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><msup><mo stretchy=\"false\">]</mo><mi>T</mi></msup></mrow><annotation encoding=\"application/x-tex\">[x, y]^{T}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0913em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\"><span class=\"mclose\">]</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8413em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span></span></span></span></span></span></span></span></span>","key":"t3iRRMoShc"},{"type":"text","value":" is an\ninjective map. Hence, the curves produced by it will be simple curves.","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"key":"wQaqnXfvYH"}],"key":"vbrJsXhg9c"},{"type":"admonition","kind":"important","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Crucial: Hidden layer size 2","position":{"start":{"line":30,"column":1},"end":{"line":30,"column":1}},"key":"eHkMhpiMoT"}],"key":"SWaBqCa2yO"},{"type":"paragraph","position":{"start":{"line":31,"column":1},"end":{"line":36,"column":1}},"children":[{"type":"text","value":"A neural network constructed as above is injective with ","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"key":"oBuVk3VYpd"},{"type":"emphasis","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"children":[{"type":"text","value":"probability 1","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"key":"E6iVRRDyBP"}],"key":"sGbuP1mHHL"},{"type":"text","value":". The critical information\nused in the construction of the network was that we maintain a hidden layer size of 2 which leads to\nthe matrices ","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"key":"JSav4qK5tF"},{"type":"inlineMath","value":"B","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span>","key":"eE2Ee7t92v"},{"type":"text","value":" being injective. If we had produced larger hidden layers, say of size ","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"key":"P6uA7Vvlrz"},{"type":"inlineMath","value":"m","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi></mrow><annotation encoding=\"application/x-tex\">m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">m</span></span></span></span>","key":"rchzQpbdG3"},{"type":"text","value":", then we\nwould eventually have to reduced the size back to 2 because our output is a ","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"key":"YSg7GbDm45"},{"type":"inlineMath","value":"\\dim 2","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>dim</mi><mo>⁡</mo><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">\\dim 2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mop\">dim</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">2</span></span></span></span>","key":"QShEviZr7F"},{"type":"text","value":" vector\nrepresenting ","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"key":"OVlXqzXccb"},{"type":"inlineMath","value":"x","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span>","key":"akZh9h2dZS"},{"type":"text","value":" and ","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"key":"V3t5iOFt0N"},{"type":"inlineMath","value":"y","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span>","key":"F0Y5ZPhKtP"},{"type":"text","value":" and a ","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"key":"xh1ToxtFfV"},{"type":"inlineMath","value":"m \\times 2","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi><mo>×</mo><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">m \\times 2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">2</span></span></span></span>","key":"uZz9IxXXzY"},{"type":"text","value":" matrix that would produce this would not be injective in\nmost cases.","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"key":"T2YyYTs2a4"}],"key":"fM8d4bQAxh"}],"key":"i9UpEIpAlO"},{"type":"footnoteDefinition","identifier":"injective_matrix_probability","label":"injective_matrix_probability","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":39,"column":1},"end":{"line":40,"column":1}},"children":[{"type":"text","value":"A square ","position":{"start":{"line":39,"column":1},"end":{"line":39,"column":1}},"key":"xUYMWAD7bp"},{"type":"inlineMath","value":"n \\times n","position":{"start":{"line":39,"column":1},"end":{"line":39,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi><mo>×</mo><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n \\times n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span>","key":"qz9SzuqvmG"},{"type":"text","value":" matrix is not injective if and only if it is\nnot invertible.","position":{"start":{"line":39,"column":1},"end":{"line":39,"column":1}},"key":"sx8t4rJOOd"}],"key":"TBIMYjm3c7"},{"type":"container","kind":"quote","children":[{"type":"blockquote","position":{"start":{"line":41,"column":1},"end":{"line":45,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":41,"column":1},"end":{"line":43,"column":1}},"children":[{"type":"text","value":"Singular matrices are rare in the sense that if a square matrix’s entries are randomly\nselected from any bounded region on the number line or complex plane, the probability that the\nmatrix is singular is 0, that is, it will “almost never” be singular.","position":{"start":{"line":41,"column":1},"end":{"line":41,"column":1}},"key":"X2Ysafu9h3"}],"key":"vvU369J1pm"}],"key":"qTdcqU33u0"},{"type":"caption","children":[{"type":"paragraph","position":{"start":{"line":45,"column":1},"end":{"line":45,"column":1}},"children":[{"type":"link","url":"https://en.wikipedia.org/wiki/Invertible_matrix#Definition","position":{"start":{"line":45,"column":1},"end":{"line":45,"column":1}},"children":[{"type":"text","value":"Wikipedia, Invertible Matrix","position":{"start":{"line":45,"column":1},"end":{"line":45,"column":1}},"key":"PWxRYjUHVB"}],"urlSource":"https://en.wikipedia.org/wiki/Invertible_matrix#Definition","data":{"page":"Invertible_matrix#Definition","wiki":"https://en.wikipedia.org/","lang":"en"},"internal":false,"protocol":"wiki","key":"a7Qa16dDZ1"}],"key":"TaxZmgv3PF"}],"key":"PMMuUpIxMr"}],"key":"gkljgS7xMo"}],"number":1,"enumerator":"1","key":"VbW2PFtwaq"},{"type":"footnoteDefinition","identifier":"injective_composition","label":"injective_composition","position":{"start":{"line":45,"column":1},"end":{"line":45,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":47,"column":1},"end":{"line":49,"column":1}},"children":[{"type":"text","value":"Composition of two injective functions ","position":{"start":{"line":47,"column":1},"end":{"line":47,"column":1}},"key":"u08Dx6l3hs"},{"type":"inlineMath","value":"f","position":{"start":{"line":47,"column":1},"end":{"line":47,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi></mrow><annotation encoding=\"application/x-tex\">f</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span></span></span>","key":"gL4LnDe8JB"},{"type":"text","value":" and ","position":{"start":{"line":47,"column":1},"end":{"line":47,"column":1}},"key":"uZjOKtZ2Tl"},{"type":"inlineMath","value":"g","position":{"start":{"line":47,"column":1},"end":{"line":47,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>g</mi></mrow><annotation encoding=\"application/x-tex\">g</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span></span></span></span>","key":"GezH6KWIIr"},{"type":"text","value":", ","position":{"start":{"line":47,"column":1},"end":{"line":47,"column":1}},"key":"Xrngcy13E4"},{"type":"inlineMath","value":"f \\circ g","position":{"start":{"line":47,"column":1},"end":{"line":47,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo>∘</mo><mi>g</mi></mrow><annotation encoding=\"application/x-tex\">f \\circ g</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∘</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span></span></span></span>","key":"Y2YAHHa3hM"},{"type":"text","value":" is also\ninjective.\n","position":{"start":{"line":47,"column":1},"end":{"line":47,"column":1}},"key":"qCeFZUVkl9"},{"type":"link","url":"https://en.wikipedia.org/wiki/Injective_function#Other_properties","position":{"start":{"line":47,"column":1},"end":{"line":47,"column":1}},"children":[{"type":"text","value":"Wikipedia, Injective function","position":{"start":{"line":47,"column":1},"end":{"line":47,"column":1}},"key":"shdHX20WaH"}],"urlSource":"https://en.wikipedia.org/wiki/Injective_function#Other_properties","data":{"page":"Injective_function#Other_properties","wiki":"https://en.wikipedia.org/","lang":"en"},"internal":false,"protocol":"wiki","key":"QVRjuZVl9E"}],"key":"gV2PobFif1"}],"number":2,"enumerator":"2","key":"M5KLwkNhRV"}],"key":"IejJBdO8Su"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":4,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Condition 2 - Closed Curves","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"g9aySFL8Sh"}],"label":"closed_transformation","identifier":"closed_transformation","html_id":"closed-transformation","key":"FJzcY5Lfif"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"For the curves represented through ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"dddhlBiaIw"},{"type":"inlineMath","value":"F","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi></mrow><annotation encoding=\"application/x-tex\">F</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span></span></span></span>","key":"PP3mzWQb5l"},{"type":"text","value":" to be closed, we need the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"yFYUTOssbG"},{"type":"inlineMath","value":"x","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span>","key":"e9P1WgzzMO"},{"type":"text","value":" and ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"h6cbF6TEdS"},{"type":"inlineMath","value":"y","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span>","key":"EFkb0r2Xiq"},{"type":"text","value":" values to be the same\nat ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"QicXBRkfRu"},{"type":"inlineMath","value":"t = 0, 1","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi><mo>=</mo><mn>0</mn><mo separator=\"true\">,</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">t = 0, 1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8389em;vertical-align:-0.1944em;\"></span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">1</span></span></span></span>","key":"ZWckSI1LPT"},{"type":"text","value":". Note, that this has to be in-built into the mapping without affecting the injectivity\nproperty that we achieved before. One way is to first produce the transformation:","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"JkYuhhXNyr"}],"key":"glBCxvwsPB"},{"type":"math","value":"C(t) = \n\\begin{bmatrix}\ncos(2\\pi t)\\\\\nsin(2\\pi t)\n\\end{bmatrix}","tight":"before","html":"<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>C</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mrow><mo fence=\"true\">[</mo><mtable rowspacing=\"0.16em\" columnalign=\"center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy=\"false\">(</mo><mn>2</mn><mi>π</mi><mi>t</mi><mo stretchy=\"false\">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mn>2</mn><mi>π</mi><mi>t</mi><mo stretchy=\"false\">)</mo></mrow></mstyle></mtd></mtr></mtable><mo fence=\"true\">]</mo></mrow></mrow><annotation encoding=\"application/x-tex\">C(t) = \n\\begin{bmatrix}\ncos(2\\pi t)\\\\\nsin(2\\pi t)\n\\end{bmatrix}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.4em;vertical-align:-0.95em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size3\">[</span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.45em;\"><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">cos</span><span class=\"mopen\">(</span><span class=\"mord\">2</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">in</span><span class=\"mopen\">(</span><span class=\"mord\">2</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.95em;\"><span></span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size3\">]</span></span></span></span></span></span></span>","enumerator":"5","key":"Bf6mZzNlcZ"},{"type":"paragraph","position":{"start":{"line":14,"column":1},"end":{"line":17,"column":1}},"children":[{"type":"text","value":"This mapping is injective for ","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"oa7THwFfv5"},{"type":"inlineMath","value":"t \\in [0, 1)","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi><mo>∈</mo><mo stretchy=\"false\">[</mo><mn>0</mn><mo separator=\"true\">,</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">t \\in [0, 1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6542em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span>","key":"M9rmqCAp5o"},{"type":"text","value":" and also satisfies ","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"Hi19nyHLwu"},{"type":"inlineMath","value":"C(0) = C(1)","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi><mo stretchy=\"false\">(</mo><mn>0</mn><mo stretchy=\"false\">)</mo><mo>=</mo><mi>C</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">C(0) = C(1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mopen\">(</span><span class=\"mord\">0</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span>","key":"wDSvk7s2CR"},{"type":"text","value":". Therefore, we use\nthis as the first transformation before applying the linear and non-linear activation layers. The\nmodified neural network architecture is shown in\n","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"wlxafK1XjA"},{"type":"crossReference","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"text","value":"Figure ","key":"EytY5ZZNFn"},{"type":"text","value":"3","key":"ZwAZwlUQY0"}],"identifier":"neural_network_architecture_injective_and_closed","label":"neural_network_architecture_injective_and_closed","kind":"figure","template":"Figure %s","enumerator":"3","resolved":true,"html_id":"neural-network-architecture-injective-and-closed","key":"loq7e5KUqJ"},{"type":"text","value":":","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"y7rqBq2GPo"}],"key":"L26aTjwsWD"},{"type":"container","kind":"figure","children":[{"type":"image","url":"/neural_network_archi-eef9f68e9caef9588b53d5778555d71b.svg","alt":"Figure showing a modified neural network architecture that produces closed curves.","height":"210px","key":"cBMDBi8bUJ","urlSource":"assets/neural_network_architecture_injective_and_closed.svg"},{"type":"caption","children":[{"type":"paragraph","position":{"start":{"line":23,"column":1},"end":{"line":24,"column":1}},"children":[{"type":"captionNumber","kind":"figure","label":"neural_network_architecture_injective_and_closed","identifier":"neural_network_architecture_injective_and_closed","html_id":"neural-network-architecture-injective-and-closed","enumerator":"3","children":[{"type":"text","value":"Figure ","key":"IpFPLCTbHi"},{"type":"text","value":"3","key":"n7fgZKySha"},{"type":"text","value":":","key":"MOBuqCIkY1"}],"template":"Figure %s:","key":"n2u1B7YNkP"},{"type":"text","value":"This modified neural network architecture produces closed curves. Also, since the entire network is\ninjective the curves produced will also be non-self-intersecting.","position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"key":"siS8YbWqz9"}],"key":"XcgjM9PlsQ"}],"key":"SdvW5js7wm"}],"label":"neural_network_architecture_injective_and_closed","identifier":"neural_network_architecture_injective_and_closed","enumerator":"3","html_id":"neural-network-architecture-injective-and-closed","key":"C78FOWfavs"},{"type":"paragraph","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"children":[{"type":"text","value":"We now have ","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"key":"xEHdCY3IQF"},{"type":"inlineMath","value":"F(0) = F(1)","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi><mo stretchy=\"false\">(</mo><mn>0</mn><mo stretchy=\"false\">)</mo><mo>=</mo><mi>F</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">F(0) = F(1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mopen\">(</span><span class=\"mord\">0</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span>","key":"qBWDHWGbTF"},{"type":"text","value":" and the mapping ","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"key":"bwUAuuXuTi"},{"type":"inlineMath","value":"F","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi></mrow><annotation encoding=\"application/x-tex\">F</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span></span></span></span>","key":"bnG1XL8aBj"},{"type":"text","value":" is also injective with probability 1!","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"key":"ZyFGfmQHpV"}],"key":"nge7Pz7ZCg"},{"type":"card","children":[{"type":"paragraph","position":{"start":{"line":30,"column":1},"end":{"line":30,"column":1}},"children":[{"type":"text","value":"We call this architecture the ","position":{"start":{"line":30,"column":1},"end":{"line":30,"column":1}},"key":"S8gqaktUkM"},{"type":"strong","position":{"start":{"line":30,"column":1},"end":{"line":30,"column":1}},"children":[{"type":"emphasis","position":{"start":{"line":30,"column":1},"end":{"line":30,"column":1}},"children":[{"type":"text","value":"Injective Network","position":{"start":{"line":30,"column":1},"end":{"line":30,"column":1}},"key":"revwRj4j6k"}],"key":"AG6f3cwhW9"}],"key":"ehDh4LonMN"},{"type":"text","value":".","position":{"start":{"line":30,"column":1},"end":{"line":30,"column":1}},"key":"XRmN2nThdx"}],"key":"f5mJ8RkIEZ"}],"key":"BpuZeWkHyr"}],"key":"Ga8yUkt8Y7"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":4,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Implementation","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"nilaVjdsaI"}],"identifier":"implementation","label":"Implementation","html_id":"implementation","implicit":true,"key":"SLbXhVM2Dn"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"We first do a basic implementation of an Injective Network.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"UmItEA4nUb"}],"key":"crbksMRzto"}],"key":"p5uIHAE07F"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"import numpy as np\nimport matplotlib.pyplot as plt\n\nnp.random.seed(42)\n\ndef injective_net(t):\n    # Perform the transformation for closed curves\n    z = np.hstack([np.cos(2 * np.pi * t), np.sin(2 * np.pi * t)])\n    a = np.tanh(z)\n\n    # Perform the linear and non-linear transformations\n    layer_count = 2\n    for i in range(layer_count):\n        # We subtract 0.5, without it the shapes will be extremely thin like lines\n        A = np.random.random((2, 2)) - 0.5\n        z = a @ A\n        a = np.tanh(z)\n    \n    return a\n\nnum_pts = 1000\nt = np.linspace(0, 1, num_pts).reshape(-1, 1)\n\nX = injective_net(t)\n\nplt.plot(X[:, 0], X[:, 1])\nplt.show()","key":"sDhgifSTAC"},{"type":"output","id":"kvuauqgqwk5DbaHDtj2q3","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"6417cf9988b409e0efb721c64bf10d3c","path":"/6417cf9988b409e0efb721c64bf10d3c.png"},"text/plain":{"content":"<Figure size 640x480 with 1 Axes>","content_type":"text/plain"}}}],"key":"ppYnBq162k"}],"key":"gZXKdbhaJS"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Now we generate random shapes to get a flavor of the variety of shapes that the parameterization can\nrepresent. Click the ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"zYe82nHt3d"},{"type":"keyboard","children":[{"type":"text","value":"Generate Curve","key":"oYUVDfAs9n"}],"key":"pVBsgbXAO4"},{"type":"text","value":" button below to initialize random ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"CUuBp484MG"},{"type":"inlineMath","value":"A","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span>","key":"bkPfuVB3G9"},{"type":"text","value":" matrices and\nvisualize the resulting curves. The activation function used is ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"SXCHFVDSLz"},{"type":"inlineCode","value":"LeakyReLU","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"V2wv52qQTd"},{"type":"text","value":" and it’s a 2 layer deep\nInjective Network.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"r9vcdv274o"}],"key":"OO0DVD1yBl"},{"type":"paragraph","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Also, notice that the generated curve never self intersects.","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"H6IDVbAxPZ"}],"key":"hm3k2ww2Fv"}],"key":"bkXttH4dxK"},{"type":"block","kind":"notebook-content","data":{},"children":[],"key":"kSYTyA5wFw"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"import numpy as np\nimport matplotlib.pyplot as plt\nfrom ipywidgets import Button, VBox, Output, Layout\nfrom IPython.display import display\n\ndef LeakyReLU(x, alpha = 0.1):\n    return np.maximum(alpha * x, x)\n\ndef injective_net(t):\n    # Perform the transformation for closed curves\n    z = np.hstack([np.cos(2 * np.pi * t), np.sin(2 * np.pi * t)])\n    a = LeakyReLU(z)\n\n    # Perform the linear and non-linear transformations\n    layer_count = 2\n    for i in range(layer_count):\n        A = np.random.random((2, 2)) - 0.5\n        z = a @ A\n        a = LeakyReLU(z)\n    \n    return a\n\n# Create an output widget to display the plot\noutput = Output()\n\n# Function to execute when the button is clicked\ndef generate_plot(_):\n    with output:\n        output.clear_output(wait = True)  # Clear previous output for fresh plot\n        num_pts = 1000\n        t = np.linspace(0, 1, num_pts).reshape(-1, 1)\n\n        X = injective_net(t)\n\n        # Plot the result\n        plt.plot(X[:, 0], X[:, 1])\n        plt.show()\n\n# Create a button widget\nbutton = Button(\n    description = \"Generate Curve\",\n)\nbutton.on_click(generate_plot)\n\n# Display the button and output together\ndisplay(VBox([button, output]))","visibility":"hide","key":"YN0uuFhQVE"},{"type":"output","id":"YrfJj__4i9ukBn1ekl52n","data":[],"visibility":"show","key":"eQAUZnj8qH"}],"data":{"tags":[]},"visibility":"show","key":"SntNaNIpI3"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Fitting Target Curves: Curve Similarity Metrics","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"DGgH3eaJkL"}],"identifier":"fitting-target-curves-curve-similarity-metrics","label":"Fitting Target Curves: Curve Similarity Metrics","html_id":"fitting-target-curves-curve-similarity-metrics","implicit":true,"key":"rF4YUnySbd"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Now that we have a shape parameterization method that represents only simple closed curves, we would\nlike to fit it to target shapes. This is useful in various scenarios: starting an optimization from\na particular initial shape, exploring the representative power of a given depth network, the effect\nof activation functions on the types of shapes that we can represent etc.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"xd5KJSrT2f"}],"key":"vD6fitloUv"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"text","value":"Let’s say we have a target shape specified (say the Stanford Bunny","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"hDtFoH1O30"},{"type":"footnoteReference","identifier":"stanford_bunny","label":"stanford_bunny","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"number":3,"enumerator":"3","key":"Q04hx101rW"},{"type":"text","value":") and we want our\nparameterization to represent that shape as closely as possible. To represent the given shape one\nway would be to tune the parameters of the representation scheme iteratively using a gradient descent\noptimization approach. This requires us to define an objective function that can then be optimized\nover. An appropriate objective for this task would be some measure of similarity(or dissimilarity)\nbetween the target curve and the one traced out by our parameterization. The objective function can\nthen be maximized(or minimized) to fit the parameters.","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"EGh52WzYut"}],"key":"TH0LUdFh9A"},{"type":"paragraph","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"text","value":"For details on similarity metrics refer to the tutorial on ","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"ipGVuhpRa8"},{"type":"link","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"text","value":"Curve Similarity Measures","key":"TYA9fMz3og"}],"identifier":"curve_similarity_measures","label":"curve_similarity_measures","url":"/curve-similarity-measures","internal":true,"dataUrl":"/curve-similarity-measures.json","key":"waABJEHaNB"},{"type":"text","value":".","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"wUoogHs5bg"}],"key":"lIzzpS350V"},{"type":"paragraph","position":{"start":{"line":17,"column":1},"end":{"line":19,"column":1}},"children":[{"type":"text","value":"Here we will assume that we have some curve similarity measures available to us defined as loss\nfunctions in PyTorch. We will use these directly to fit shapes. In particular we have the following\nsetup:","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"key":"t5AJxvxOHg"}],"key":"ylcYYKFhfy"},{"type":"container","kind":"table","children":[{"type":"caption","children":[{"type":"paragraph","children":[{"type":"captionNumber","kind":"table","label":"optimization_problem_setup","identifier":"optimization_problem_setup","html_id":"optimization-problem-setup","enumerator":"1","children":[{"type":"text","value":"Table ","key":"YtOg7RiwKb"},{"type":"text","value":"1","key":"RgMcuDtfGd"},{"type":"text","value":":","key":"jNzlLgUgoH"}],"template":"Table %s:","key":"WLiKlvtojY"},{"type":"text","value":"The optimization problem setup","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"key":"L1lZXFyAPs"}],"key":"wTUcWDWk6m"}],"key":"EkUrXjL6FL"},{"type":"table","position":{"start":{"line":24,"column":1},"end":{"line":29,"column":1}},"children":[{"type":"tableRow","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"children":[{"type":"tableCell","header":true,"position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"children":[{"type":"text","value":"Object","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"key":"WokfjO4EcR"}],"key":"SiElms3r2f"},{"type":"tableCell","header":true,"position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"children":[{"type":"text","value":"Details","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"key":"fS798vtbyl"}],"key":"FdTUzngTED"}],"key":"IDbtLfzhWx"},{"type":"tableRow","position":{"start":{"line":26,"column":1},"end":{"line":26,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":26,"column":1},"end":{"line":26,"column":1}},"children":[{"type":"text","value":"Shape Parameterization","position":{"start":{"line":26,"column":1},"end":{"line":26,"column":1}},"key":"IFOulXlPqr"}],"key":"VDz7rLaRmN"},{"type":"tableCell","position":{"start":{"line":26,"column":1},"end":{"line":26,"column":1}},"children":[{"type":"text","value":"Injective Network with parameters ","position":{"start":{"line":26,"column":1},"end":{"line":26,"column":1}},"key":"ZXMvCCPOdt"},{"type":"text","value":"ϕ","position":{"start":{"line":26,"column":1},"end":{"line":26,"column":1}},"key":"ssGV7Nf0MX"}],"key":"Ntm0eXZ359"}],"key":"fLGLkNBHWF"},{"type":"tableRow","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"children":[{"type":"text","value":"Parametrized Curve","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"key":"aPOoXCv8dT"}],"key":"kTJo85eUqO"},{"type":"tableCell","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"children":[{"type":"text","value":"Sampled at discrete ","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"key":"C16FQo5LRx"},{"type":"inlineMath","value":"t \\in [0, 1)","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi><mo>∈</mo><mo stretchy=\"false\">[</mo><mn>0</mn><mo separator=\"true\">,</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">t \\in [0, 1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6542em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span>","key":"EUXO7NoTLk"},{"type":"text","value":" from Injective Network, stored in ","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"key":"HTx4eaBJ1U"},{"type":"inlineMath","value":"N_p\\times 2","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>N</mi><mi>p</mi></msub><mo>×</mo><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">N_p\\times 2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9694em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">2</span></span></span></span>","key":"tMxZVYtjEC"},{"type":"text","value":" matrix ","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"key":"l1mvwRPYE2"},{"type":"inlineMath","value":"X_p","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>X</mi><mi>p</mi></msub></mrow><annotation encoding=\"application/x-tex\">X_p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9694em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span></span>","key":"Q8smbP8ZLc"}],"key":"Btgg5Sn6sf"}],"key":"RgZYjJxtBn"},{"type":"tableRow","position":{"start":{"line":28,"column":1},"end":{"line":28,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":28,"column":1},"end":{"line":28,"column":1}},"children":[{"type":"text","value":"Target Curve","position":{"start":{"line":28,"column":1},"end":{"line":28,"column":1}},"key":"yyCQeyEfLt"}],"key":"RNI8FnEmRd"},{"type":"tableCell","position":{"start":{"line":28,"column":1},"end":{"line":28,"column":1}},"children":[{"type":"text","value":"Specified curve to fit, stored in ","position":{"start":{"line":28,"column":1},"end":{"line":28,"column":1}},"key":"IfnQk1rdkF"},{"type":"inlineMath","value":"N_t \\times 2","position":{"start":{"line":28,"column":1},"end":{"line":28,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>N</mi><mi>t</mi></msub><mo>×</mo><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">N_t \\times 2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2806em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">2</span></span></span></span>","key":"viY53teY9H"},{"type":"text","value":" matrix ","position":{"start":{"line":28,"column":1},"end":{"line":28,"column":1}},"key":"Xq2EfciAor"},{"type":"inlineMath","value":"X_t","position":{"start":{"line":28,"column":1},"end":{"line":28,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>X</mi><mi>t</mi></msub></mrow><annotation encoding=\"application/x-tex\">X_t</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2806em;\"><span style=\"top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>","key":"OSja6DLch4"}],"key":"Du6b2xiwWY"}],"key":"Qs1GmUq71r"},{"type":"tableRow","position":{"start":{"line":29,"column":1},"end":{"line":29,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":29,"column":1},"end":{"line":29,"column":1}},"children":[{"type":"text","value":"Loss Function","position":{"start":{"line":29,"column":1},"end":{"line":29,"column":1}},"key":"zgK6Aj8yBi"}],"key":"kcJtvgKNzW"},{"type":"tableCell","position":{"start":{"line":29,"column":1},"end":{"line":29,"column":1}},"children":[{"type":"inlineMath","value":"\\mathcal{L}(X_t, X_p)","position":{"start":{"line":29,"column":1},"end":{"line":29,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">L</mi><mo stretchy=\"false\">(</mo><msub><mi>X</mi><mi>t</mi></msub><mo separator=\"true\">,</mo><msub><mi>X</mi><mi>p</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathcal{L}(X_t, X_p)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0361em;vertical-align:-0.2861em;\"></span><span class=\"mord mathcal\">L</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2806em;\"><span style=\"top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>","key":"hVVaezgXNL"}],"key":"D5J0FhxXAf"}],"key":"eymqlgogEN"}],"key":"Dfewk4toah"}],"label":"optimization_problem_setup","identifier":"optimization_problem_setup","enumerator":"1","html_id":"optimization-problem-setup","key":"jtLbnSCzla"},{"type":"paragraph","position":{"start":{"line":33,"column":1},"end":{"line":34,"column":1}},"children":[{"type":"text","value":"Note that since ","position":{"start":{"line":33,"column":1},"end":{"line":33,"column":1}},"key":"QdemW1lzp1"},{"type":"inlineMath","value":"X_p","position":{"start":{"line":33,"column":1},"end":{"line":33,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>X</mi><mi>p</mi></msub></mrow><annotation encoding=\"application/x-tex\">X_p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9694em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span></span>","key":"AHKZKE6Yom"},{"type":"text","value":" is sampled from the network with parameters ","position":{"start":{"line":33,"column":1},"end":{"line":33,"column":1}},"key":"sORoSyAOSn"},{"type":"text","value":"ϕ","position":{"start":{"line":33,"column":1},"end":{"line":33,"column":1}},"key":"KrsqYsahmi"},{"type":"text","value":" it is also a function of\n","position":{"start":{"line":33,"column":1},"end":{"line":33,"column":1}},"key":"ThCONdNni3"},{"type":"text","value":"ϕ","position":{"start":{"line":33,"column":1},"end":{"line":33,"column":1}},"key":"Zfaq6Ag7pD"},{"type":"text","value":", ","position":{"start":{"line":33,"column":1},"end":{"line":33,"column":1}},"key":"MAyIsJXAHd"},{"type":"inlineMath","value":"X_p = X_p(\\phi)","position":{"start":{"line":33,"column":1},"end":{"line":33,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>X</mi><mi>p</mi></msub><mo>=</mo><msub><mi>X</mi><mi>p</mi></msub><mo stretchy=\"false\">(</mo><mi>ϕ</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">X_p = X_p(\\phi)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9694em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0361em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">ϕ</span><span class=\"mclose\">)</span></span></span></span>","key":"bPVv3LbmcZ"},{"type":"text","value":".","position":{"start":{"line":33,"column":1},"end":{"line":33,"column":1}},"key":"NHpjsUVjeI"}],"key":"j2K38vdcij"},{"type":"paragraph","position":{"start":{"line":36,"column":1},"end":{"line":37,"column":1}},"children":[{"type":"strong","position":{"start":{"line":36,"column":1},"end":{"line":36,"column":1}},"children":[{"type":"emphasis","position":{"start":{"line":36,"column":1},"end":{"line":36,"column":1}},"children":[{"type":"text","value":"Goal","position":{"start":{"line":36,"column":1},"end":{"line":36,"column":1}},"key":"CWPqfe9saz"}],"key":"dugAF4hUoC"}],"key":"xq4A5BfrAf"},{"type":"text","value":": Use automatic differentiation to get gradients of ","position":{"start":{"line":36,"column":1},"end":{"line":36,"column":1}},"key":"RmRbWjTqGf"},{"type":"inlineMath","value":"\\mathcal{L}(X_t, X_p)","position":{"start":{"line":36,"column":1},"end":{"line":36,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">L</mi><mo stretchy=\"false\">(</mo><msub><mi>X</mi><mi>t</mi></msub><mo separator=\"true\">,</mo><msub><mi>X</mi><mi>p</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathcal{L}(X_t, X_p)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0361em;vertical-align:-0.2861em;\"></span><span class=\"mord mathcal\">L</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2806em;\"><span style=\"top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>","key":"C1cr3bgVJK"},{"type":"text","value":" w.r.t.\n","position":{"start":{"line":36,"column":1},"end":{"line":36,"column":1}},"key":"M3R3vRMSq0"},{"type":"text","value":"ϕ","position":{"start":{"line":36,"column":1},"end":{"line":36,"column":1}},"key":"UGCY73AbEq"},{"type":"text","value":" and then run gradient descent and tune the parameters.","position":{"start":{"line":36,"column":1},"end":{"line":36,"column":1}},"key":"jlKGoj5PmJ"}],"key":"oWUHwdAjmB"},{"type":"footnoteDefinition","identifier":"stanford_bunny","label":"stanford_bunny","position":{"start":{"line":36,"column":1},"end":{"line":36,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":39,"column":1},"end":{"line":39,"column":1}},"children":[{"type":"text","value":"The Stanford Bunny","position":{"start":{"line":39,"column":1},"end":{"line":39,"column":1}},"key":"qMK8IvxRm4"}],"key":"uLsOT0S2de"},{"type":"image","url":"/stanford_bunny-ff229240b51ddacea44a5bb5059b6f90.svg","alt":"The Stanford Bunny shown as a target curve.","height":"225px","align":"center","key":"vNe23KmrPK","urlSource":"assets/stanford_bunny.svg"},{"type":"paragraph","position":{"start":{"line":44,"column":1},"end":{"line":45,"column":1}},"children":[{"type":"text","value":"The ","position":{"start":{"line":44,"column":1},"end":{"line":44,"column":1}},"key":"BLIP5bEYik"},{"type":"link","url":"https://en.wikipedia.org/wiki/Stanford_bunny","position":{"start":{"line":44,"column":1},"end":{"line":44,"column":1}},"children":[{"type":"text","value":"Stanford Bunny","position":{"start":{"line":44,"column":1},"end":{"line":44,"column":1}},"key":"IL6wgqQb9c"}],"urlSource":"https://en.wikipedia.org/wiki/Stanford_bunny","data":{"page":"Stanford_bunny","wiki":"https://en.wikipedia.org/","lang":"en"},"internal":false,"protocol":"wiki","key":"lRiY33Eeri"},{"type":"text","value":". We will use it as\na target shape against which we test our parameterization techniques.","position":{"start":{"line":44,"column":1},"end":{"line":44,"column":1}},"key":"AFYl7nvqv7"}],"key":"UYlwHWKsOi"}],"number":3,"enumerator":"3","key":"vJMS9smwbq"}],"key":"QI52qifYbB"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":4,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Implementation","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"HVei4SCDgi"}],"identifier":"implementation","label":"Implementation","html_id":"implementation-1","implicit":true,"key":"jSxXc08aMx"}],"key":"puctB0Qe1K"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"import torch\nfrom torch import nn\n\nclass InjectiveNet(nn.Module):\n    def __init__(self, layer_count, act_fn):\n        super().__init__()\n\n        # Define the transformation from t on the [0, 1] interval to unit circle for closed shapes\n        self.closed_transform = lambda t: torch.hstack([\n            torch.cos(2 * torch.pi * t),\n            torch.sin(2 * torch.pi * t)\n        ])\n\n        layers = []\n        for i in range(layer_count):\n            layers.append(nn.Linear(2, 2))\n            layers.append(act_fn())\n        \n        self.linear_act_stack = nn.Sequential(*layers)\n    \n    def forward(self, t):\n        x = self.closed_transform(t)\n        x = self.linear_act_stack(x)\n        return x","key":"XdNOcbMkFs"},{"type":"output","id":"3RHiyh_R1Afb9Z6QzPFJA","data":[],"key":"Io0FbAottI"}],"key":"k3nEpDDlti"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Now we train Injective Networks to fit target shapes. In particular we use shapes from the\n","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"QqjhaYNYBy"},{"type":"link","url":"/shapes-efd577b884665a62c6097b323fb4f69a.py","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"shapes","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"NEavkYExoR"}],"urlSource":"./notes/curve_similarity_measures/shapes.py","static":true,"protocol":"file","key":"T23yKxP1E3"},{"type":"text","value":" python module and loss functions from the\n","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"XmMaiYrKZG"},{"type":"link","url":"/loss_functions-de4a7071c3d337b7c8fcba6b8527ff4e.py","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"loss_functions","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"pHQDQ1obAm"}],"urlSource":"./notes/curve_similarity_measures/loss_functions.py","static":true,"protocol":"file","key":"wzqVf8kN6L"},{"type":"text","value":" module. We will use a square\nand circle as target shapes and the Mean Squared Error (MSE) loss function to quantify the\ndifference between the parameterized and the target curve.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"MYiRs3Xiys"}],"key":"kaZsAneH1g"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"We also use the ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"I5KsjwCCcH"},{"type":"link","url":"/utils-10c31ea29202ad0d17a3bee71b4cad5c.py","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"automate_training","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"MqPIV0BEHg"}],"urlSource":"./assets/utils.py","static":true,"protocol":"file","key":"mq4YitYOkX"},{"type":"footnoteReference","identifier":"automate_training","label":"automate_training","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"number":4,"enumerator":"4","key":"ZHZGJt57sG"},{"type":"text","value":" function to\nhide the training details and focus on the parameterization. The ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"kYIkbTXU9h"},{"type":"link","url":"/utils-10c31ea29202ad0d17a3bee71b4cad5c.py","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"plot_curve","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"DdtZF7tfzm"}],"urlSource":"./assets/utils.py","static":true,"protocol":"file","key":"zf8sJorheR"},{"type":"text","value":"\nfunction plots the target and the parameterized curves and abstracts away the plotting details.","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"Q8iTtAVdl0"}],"key":"S1KPPtmls0"},{"type":"footnoteDefinition","identifier":"automate_training","label":"automate_training","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"The code used for automating the training of Networks is:","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"pJoe1yjQNB"}],"key":"eOwSfSgmmv"},{"type":"include","file":"assets/utils.py","literal":true,"filter":{"lines":[[1,2],[5,31]]},"children":[{"type":"code","value":"import torch\nfrom torch import nn\n\n\ndef automate_training(\n        model,\n        loss_fn,\n        X_train,\n        Y_train,\n        epochs = 1000,\n        print_cost_every = 200,\n        learning_rate = 0.001,\n):\n    optimizer = torch.optim.Adam(model.parameters(), lr = learning_rate)\n    scheduler = torch.optim.lr_scheduler.ReduceLROnPlateau(optimizer, factor = 0.99)\n\n    num_digits = len(str(epochs))\n\n    for epoch in range(epochs):\n        Y_model = model(X_train)\n        loss = loss_fn(Y_model, Y_train)\n\n        loss.backward()\n        optimizer.step()\n        optimizer.zero_grad()\n        scheduler.step(loss.item())\n\n        if epoch == 0 or (epoch + 1) % print_cost_every == 0:\n            print(f'Epoch: [{epoch + 1:{num_digits}}/{epochs}]. Loss: {loss.item():11.6f}')","lang":"python","filename":"utils.py","key":"TsVNh0O4aZ"}],"key":"gNUAtr7hRG"}],"number":4,"enumerator":"4","key":"lpoEfH7zbu"}],"key":"mxTpN9hCHT"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"from assets.shapes import circle, square\nfrom assets.loss_functions import mse\nfrom assets.utils import automate_training, plot_curves\n\n# Generate target curve points\nnum_pts = 1000\nt = torch.linspace(0, 1, num_pts).reshape(-1, 1)\nX_t_circle = circle(num_pts)\nX_t_square = square(num_pts)\n\n# Initialize networks to learn the target shapes and train\ncircle_net = InjectiveNet(layer_count = 3, act_fn = nn.Tanh)\nsquare_net = InjectiveNet(layer_count = 3, act_fn = nn.Tanh)\n\nprint('Training Circle Net:')\nautomate_training(\n    model = circle_net, loss_fn = mse, X_train = t, Y_train = X_t_circle,\n    learning_rate = 0.1, epochs = 1000, print_cost_every = 200\n)\nprint('Training Square Net:')\nautomate_training(\n    model = circle_net, loss_fn = mse, X_train = t, Y_train = X_t_circle,\n    learning_rate = 0.1, epochs = 1000, print_cost_every = 200\n)\n\n# Get final curve represented by the networks\nX_p_circle = circle_net(t)\nX_p_square = square_net(t)\n\n# Plot the curves\nplot_curves(X_p_circle, X_t_circle)\nplot_curves(X_p_square, X_t_square)","key":"yApkSZYAJG"},{"type":"output","id":"mVPeta2Fe50U7jruKqc5E","data":[{"name":"stdout","output_type":"stream","text":"Training Circle Net:\nEpoch: [   0/1000]. Loss:    1.184715\nEpoch: [ 200/1000]. Loss:    0.003462\nEpoch: [ 400/1000]. Loss:    0.002474\nEpoch: [ 600/1000]. Loss:    0.002254\nEpoch: [ 800/1000]. Loss:    0.002209\nTraining Square Net:\nEpoch: [   0/1000]. Loss:    1.833251\nEpoch: [ 200/1000]. Loss:    0.000598\nEpoch: [ 400/1000]. Loss:    0.000386\nEpoch: [ 600/1000]. Loss:    0.000301\nEpoch: [ 800/1000]. Loss:    0.000269\n"},{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"529af8c65bf65998c803a60a821d44e9","path":"/529af8c65bf65998c803a60a821d44e9.png"},"text/plain":{"content":"<Figure size 640x480 with 1 Axes>","content_type":"text/plain"}}},{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"5ebbe301171d26a1e2b229431c253aa3","path":"/5ebbe301171d26a1e2b229431c253aa3.png"},"text/plain":{"content":"<Figure size 640x480 with 1 Axes>","content_type":"text/plain"}}}],"key":"ATXzv9MewO"}],"key":"q129QdeRA9"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Awesome! We see that we are doing good on simple shapes. Now we move onto something challenging.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"KNx2U4APit"}],"key":"Zk3kQWp6DD"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Let’s test the method on the Stanford Bunny. We will treat the Stanford Bunny as our recurring\nevaluation target for different architectures. Therefore we will use a fixed number of points on the\ntarget bunny curve to maintain consistency across curve fitting results.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"R5d6ldEjzY"}],"key":"w4BZ6xsgjT"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"We now try different ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"QLFBGSk1nL"},{"type":"inlineCode","value":"layer_count","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"Yo1llAhpT2"},{"type":"text","value":" and ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"TNL1Ls6Uir"},{"type":"inlineCode","value":"act_fn","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"i77GtjePoI"},{"type":"text","value":" to try and fit the bunny. We recommend you to play\naround with the code below to get a good feel for curve fitting capacity of Injective Networks.","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"vMwWgbIoeC"}],"key":"uXtuPuopuB"}],"key":"PZUFAoIoZh"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"from assets.shapes import stanford_bunny\n\n# Generate target curve points\nX_t_bunny = stanford_bunny(num_points = 1000)\nnum_pts = X_t_bunny.shape[0]\nt = torch.linspace(0, 1, num_pts).reshape(-1, 1)\n\nbunny_net = InjectiveNet(layer_count = 3, act_fn = nn.LeakyReLU)\n\nautomate_training(bunny_net, mse, t, X_t_bunny, learning_rate = 0.1, epochs = 1000, print_cost_every = 200)\n\nX_p_bunny = bunny_net(t)\nplot_curves(X_p_bunny, X_t_bunny)","key":"Hi5QSaV2fW"},{"type":"output","id":"MmBvTn0tjZtrLiFvM8xxp","data":[{"name":"stdout","output_type":"stream","text":"Epoch: [   0/1000]. Loss: 4641.907715\nEpoch: [ 200/1000]. Loss: 1312.129150\nEpoch: [ 400/1000]. Loss:  135.267624\nEpoch: [ 600/1000]. Loss:   92.929283\nEpoch: [ 800/1000]. Loss:   83.775101\n"},{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"f2e972d9539b6a7603f687d26d1a35cb","path":"/f2e972d9539b6a7603f687d26d1a35cb.png"},"text/plain":{"content":"<Figure size 640x480 with 1 Axes>","content_type":"text/plain"}}}],"key":"Rf76lt1YCU"}],"key":"M4qgL15Kfi"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"We observe very poor performance❗⚠️","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"MqjXZxFt4S"}],"key":"Bc5Ik2kp2v"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"If you played around with the code above you would have observed that Injective Networks on their\nown:","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"EWTTfAsDW9"}],"key":"daqhlmm7oq"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":5,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"can get stuck in local optima.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"sIySn11oJr"}],"key":"ZcLtW5JbaK"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"can fail to be expressive enough.","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"ieXpFGkgbB"}],"key":"mWntumPmxP"}],"key":"l34IxF1SIY"},{"type":"paragraph","position":{"start":{"line":9,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"text","value":"To get ideas on improving the parameterization we first “","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"WqNVQ6uIWM"},{"type":"emphasis","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"cheat","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"BvAoX4Xndi"}],"key":"FbA36BgElo"},{"type":"text","value":"” a little and use the\n","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"vDIxLAQ3G4"},{"type":"inlineCode","value":"PReLU","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"XeooZB9a3M"},{"type":"footnoteReference","identifier":"prelu","label":"prelu","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"number":5,"enumerator":"5","key":"ZlyEo0k5H6"},{"type":"text","value":" activation function. ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"ZEGTy6cOYM"},{"type":"inlineCode","value":"PReLU","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"DMvG5VsAZp"},{"type":"text","value":" has a learnable slope parameter ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"fvdjbjgjC0"},{"type":"text","value":"α","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"ZcfNdrtmAr"},{"type":"text","value":" which can\nduring training become negative and therefore violate the injectivity property required from the\nactivation function for non-self intersection. Therefore, in general ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"RHBjADEIDu"},{"type":"inlineCode","value":"PReLU","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"nygSc6jwCM"},{"type":"text","value":" cannot be used in\nInjective Networks but we use it here to gain insights into improving the method further.","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"YKGnK0nRUB"}],"label":"why_prelu","identifier":"why_prelu","html_id":"why-prelu","key":"bJ54XsqCFa"},{"type":"footnoteDefinition","identifier":"prelu","label":"prelu","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"link","url":"https://pytorch.org/docs/stable/generated/torch.nn.PReLU.html","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"text","value":"PyTorch PReLU","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"Mg5FD4eizs"}],"urlSource":"https://pytorch.org/docs/stable/generated/torch.nn.PReLU.html","key":"YsfKOyrS7g"}],"key":"shQi2MrP47"},{"type":"blockquote","children":[{"type":"paragraph","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"children":[{"type":"text","value":"Applies the element-wise PReLU function.","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"key":"fW2OsFScM8"}],"key":"jBojhg0bM8"},{"type":"math","value":"\\text{PReLU}(x) = \\max(0,x) + a * \\min(0,x)","position":{"start":{"line":19,"column":1},"end":{"line":21,"column":1}},"html":"<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mtext>PReLU</mtext><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>max</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><mn>0</mn><mo separator=\"true\">,</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>+</mo><mi>a</mi><mo>∗</mo><mi>min</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><mn>0</mn><mo separator=\"true\">,</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\text{PReLU}(x) = \\max(0,x) + a * \\min(0,x)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord text\"><span class=\"mord\">PReLU</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mop\">max</span><span class=\"mopen\">(</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4653em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mop\">min</span><span class=\"mopen\">(</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span></span></span></span></span>","enumerator":"6","key":"fH7yN8JsjP"},{"type":"paragraph","position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"children":[{"type":"text","value":"or","position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"key":"Vzol0BngXP"}],"key":"eYRsiFXAIc"},{"type":"math","value":"\\text{PReLU}(x) =\n\\begin{cases}\nx, & \\text{ if } x \\ge 0 \\\\\nax, & \\text{ otherwise }\n\\end{cases}","position":{"start":{"line":25,"column":1},"end":{"line":31,"column":1}},"html":"<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mtext>PReLU</mtext><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mrow><mo fence=\"true\">{</mo><mtable rowspacing=\"0.36em\" columnalign=\"left left\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>x</mi><mo separator=\"true\">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mtext> if </mtext><mi>x</mi><mo>≥</mo><mn>0</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>a</mi><mi>x</mi><mo separator=\"true\">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtext> otherwise </mtext></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding=\"application/x-tex\">\\text{PReLU}(x) =\n\\begin{cases}\nx, &amp; \\text{ if } x \\ge 0 \\\\\nax, &amp; \\text{ otherwise }\n\\end{cases}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord text\"><span class=\"mord\">PReLU</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3em;vertical-align:-1.25em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size4\">{</span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.69em;\"><span style=\"top:-3.69em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span></span></span><span style=\"top:-2.25em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.19em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:1em;\"></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.69em;\"><span style=\"top:-3.69em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\"> if </span></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≥</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">0</span></span></span><span style=\"top:-2.25em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\"> otherwise </span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.19em;\"><span></span></span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span>","enumerator":"7","key":"bHs6tysM8N"},{"type":"paragraph","position":{"start":{"line":33,"column":1},"end":{"line":34,"column":1}},"children":[{"type":"text","value":"Here ","position":{"start":{"line":33,"column":1},"end":{"line":33,"column":1}},"key":"S6U25hDcQu"},{"type":"inlineMath","value":"a","position":{"start":{"line":33,"column":1},"end":{"line":33,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi></mrow><annotation encoding=\"application/x-tex\">a</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">a</span></span></span></span>","key":"pKVaY9hrbk"},{"type":"text","value":" is a learnable parameter. When called without arguments, ","position":{"start":{"line":33,"column":1},"end":{"line":33,"column":1}},"key":"blQhWgnY9l"},{"type":"inlineCode","value":"nn.PReLU()","position":{"start":{"line":33,"column":1},"end":{"line":33,"column":1}},"key":"EPT1KkyCzh"},{"type":"text","value":" uses a single\nparameter ","position":{"start":{"line":33,"column":1},"end":{"line":33,"column":1}},"key":"hEwmdkHl8n"},{"type":"inlineMath","value":"a","position":{"start":{"line":33,"column":1},"end":{"line":33,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi></mrow><annotation encoding=\"application/x-tex\">a</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">a</span></span></span></span>","key":"X58uYxs0e6"},{"type":"text","value":" across all input channels.","position":{"start":{"line":33,"column":1},"end":{"line":33,"column":1}},"key":"CEEAmkHxkh"}],"key":"ENNjwSdUdD"}],"key":"EmjC6x82Gc"}],"number":5,"enumerator":"5","key":"mCwvZ4wM9F"}],"key":"dnWjxKw4Gc"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"from assets.shapes import stanford_bunny\n\n# Generate target curve points\nX_t_bunny = stanford_bunny(num_points = 100)\nnum_pts = X_t_bunny.shape[0]\nt = torch.linspace(0, 1, num_pts).reshape(-1, 1)\n\nbunny_net = InjectiveNet(layer_count = 4, act_fn = nn.PReLU)\n\nautomate_training(bunny_net, mse, t, X_t_bunny, learning_rate = 0.1, epochs = 10000, print_cost_every = 2000)\n\nX_p_bunny = bunny_net(t)\nplot_curves(X_p_bunny, X_t_bunny)","key":"VyAPj2pIfG"},{"type":"output","id":"3hjxpSy5IRxQrkQO618Lt","data":[{"name":"stdout","output_type":"stream","text":"Epoch: [    0/10000]. Loss: 4654.035156\nEpoch: [ 2000/10000]. Loss:   46.498608\nEpoch: [ 4000/10000]. Loss:   38.749210\nEpoch: [ 6000/10000]. Loss:   37.504185\nEpoch: [ 8000/10000]. Loss:   36.196209\n"},{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"7dbaec82e99f312931be50148c9b6f3b","path":"/7dbaec82e99f312931be50148c9b6f3b.png"},"text/plain":{"content":"<Figure size 640x480 with 1 Axes>","content_type":"text/plain"}}}],"key":"WmNlQvUy4Y"}],"key":"IFrh2U0T48"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"We see an exciting improvement! Injective Networks with ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"KmgYHOldac"},{"type":"inlineCode","value":"PReLU","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"Us09tgFN92"},{"type":"text","value":" do much better. This gives us the\nfollowing insight:","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"luuuwy9diV"}],"label":"parameter_insight","identifier":"parameter_insight","html_id":"parameter-insight","key":"yF805KYWpa"},{"type":"card","children":[{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Injective Networks are ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"nCOQ74GHze"},{"type":"strong","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"parameter deficient","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"ompADc4rLn"}],"key":"O73f2nvtzm"},{"type":"text","value":".","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"YjykI1eG1i"}],"key":"pgmJAHEVHf"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Adding parameters gives them much more representation power.","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"sdpNWkZSDL"}],"key":"Qfkx3mW17O"}],"key":"X4Yek3oJc4"}],"key":"LuZ3gTj4ER"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"We will come back to address this in.ajlsdjfklasdkf\nBut for now we look at auxilliary networks.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Fi7t164sJi"}],"key":"WxlcTENA9Y"}],"key":"FttBbgkH2f"}],"key":"bxVsvWhpOt"},"references":{"cite":{"order":[],"data":{}}}}